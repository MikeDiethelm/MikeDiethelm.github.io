import { Translations } from '../translation.service';

export const IT_TRANSLATIONS: Translations = {
  // Navigation
  'nav.home': 'Home',
  'nav.weather': 'Meteo',
  'nav.crypto': 'Crypto',
  'nav.angular': 'Angular',
  'nav.features': 'Funzionalità',

  // Home Component
  'home.greeting': 'Ciao, sono',
  'home.subtitle': 'Sviluppatore Fullstack',
  'home.intro': 'Benvenuto nel mio portfolio! Sono uno sviluppatore appassionato con focus su Angular e tecnologie web moderne. Qui dimostro le mie competenze attraverso varie funzionalità e progetti.',
  'home.linkedin': 'LinkedIn',
  'home.cta.viewPortfolio': 'Vedi il portfolio',
  'home.cta.contact': 'Contattami',
  'home.stats.yearsExperience': 'Anni di esperienza',
  'home.stats.projects': 'Progetti',
  'home.stats.technologies': 'Tecnologie',
  'home.stats.engagement': 'Impegno',
  'home.skills.title': 'La mia esperienza',
  'home.skills.subtitle': 'Tecnologie e strumenti che uso quotidianamente',
  'home.skills.frontend': 'Frontend',
  'home.skills.backend': 'Backend & APIs',
  'home.skills.tools': 'Strumenti & DevOps',
  'home.projects.title': 'Progetti selezionati',
  'home.projects.subtitle': 'Scopri i miei ultimi lavori e dimostrazioni tecniche',
  'home.projects.viewAll': 'Vedi tutti i progetti',
  'home.features.title': 'Dimostrazioni di funzionalità',
  'home.features.weather.title': 'App Meteo',
  'home.features.weather.description': 'Applicazione meteo completa con integrazione API gratuita',
  'home.features.weather.button': 'Vedi Meteo',
  'home.features.crypto.title': 'Tracker Crypto',
  'home.features.crypto.description': 'Prezzi in tempo reale e variazioni 24h delle top criptovalute',
  'home.features.crypto.button': 'Vedi Crypto',
  'home.features.angular.title': 'Angular v20 Best Practices',
  'home.features.angular.description': 'Riepilogo completo dello sviluppo Angular moderno con Signals e Standalone Components',
  'home.features.angular.button': 'Vedi Angular',
  'home.features.all.button': 'Tutte le funzionalità',

  // Technology names
  'tech.angular': 'Angular',
  'tech.typescript': 'TypeScript',
  'tech.scss': 'SCSS',
  'tech.material': 'Material Design',
  'tech.rxjs': 'RxJS',
  'tech.restful': 'API RESTful',
  'tech.httpclient': 'HttpClient',
  'tech.state': 'Gestione dello stato',
  'tech.node': 'Node.js',
  'tech.git': 'Git',
  'tech.vscode': 'VS Code',
  'tech.npm': 'NPM',
  'tech.webpack': 'Webpack',
  'tech.openweather': 'API OpenWeather',
  'tech.coingecko': 'API CoinGecko',
  'tech.charts': 'Grafici',

  // Weather Component
  'weather.title': 'Previsioni meteo',
  'weather.subtitle': 'Dati meteo attuali per la tua città',
  'weather.search.label': 'Inserisci città',
  'weather.search.placeholder': 'es. Berlino, Monaco, Zurigo...',
  'weather.search.button': 'Cerca',
  'weather.loading': 'Caricamento...',
  'weather.error': 'Errore nel caricamento dei dati meteo',
  'weather.error.title': 'Errore verificato',
  'weather.error.tip': 'Suggerimento',
  'weather.error.suggestion': 'Controlla l\'ortografia o prova un altro nome di città',
  'weather.error.close': 'Chiudi',
  'weather.popular.title': 'Città popolari',
  'weather.refresh': 'Aggiorna',
  'weather.lastUpdated': 'Ultimo aggiornamento',
  'weather.backToHome.button': 'Torna alla home',
  'weather.backToHome.tooltip': 'Torna alla pagina principale',
  'weather.feelsLike': 'Percepita',
  'weather.minMax': 'Min/Max',
  'weather.humidity': 'Umidità',
  'weather.pressure': 'Pressione',
  'weather.wind': 'Vento',
  'weather.sunrise': 'Alba',
  'weather.sunset': 'Tramonto',

  // Crypto Component
  'crypto.title': 'Criptovalute',
  'crypto.subtitle': 'Prezzi in tempo reale delle top criptovalute',
  'crypto.loading': 'Caricamento...',
  'crypto.refresh.button': 'Aggiorna',
  'crypto.refresh.tooltip': 'Ricarica dati',
  'crypto.currency.label': 'Valuta:',

  'crypto.error.title': 'Errore di caricamento',
  'crypto.error.dismiss': 'Chiudi',
  'crypto.lastUpdate': 'Ultimo aggiornamento',
  'crypto.dataStale': 'I dati potrebbero essere obsoleti',
  'crypto.topCurrencies': 'Top Criptovalute',
  'crypto.table.rank': 'Posizione',
  'crypto.table.name': 'Nome',
  'crypto.table.price': 'Prezzo',
  'crypto.table.change24h': 'Variazione 24h',
  'crypto.table.marketCap': 'Capitalizzazione',
  'crypto.marketSize.label': 'Dimensione del mercato',
  'crypto.marketSize.top100': 'Top 100 Coins',
  'crypto.marketSize.top250': 'Top 250 Coins',
  'crypto.marketSize.top500': 'Top 500 Coins',
  'crypto.marketSize.top1000': 'Top 1.000 Coins',
  'crypto.marketSize.top2500': 'Top 2.500 Coins',
  'crypto.pageSize.label': 'Coins per pagina',
  'crypto.pageSize.coinsPerPage': 'coins per pagina',
  'crypto.pagination.showing': 'Visualizzazione',
  'crypto.pagination.of': 'di',
  'crypto.pagination.previous': 'Pagina precedente',
  'crypto.pagination.next': 'Pagina successiva',
  'crypto.empty.title': 'Nessun dato disponibile',
  'crypto.empty.subtitle': 'Fai clic su "Carica dati" per visualizzare i prezzi attuali delle criptovalute.',
  'crypto.loadData': 'Carica dati',
  'crypto.clickForDetails': 'Clicca per i dettagli',
  'crypto.table.volume': 'Volume 24h',
  'crypto.table.supply': 'Offerta',
  'crypto.table.chart': 'Grafico 7g',
  'crypto.search.placeholder': 'Cerca crypto...',
  'crypto.noResults': 'Nessun risultato trovato',
  'crypto.viewDetails': 'Vedi dettagli',

  // Angular Summary Component
  'angular.header.title': 'Angular v20 Best Practices e Riepilogo',
  'angular.header.subtitle': 'Sviluppo web moderno con Angular 20 - Signals, Standalone Components e altro',
  'angular.backToHome': 'Torna alla home',
  'angular.sections.coreFeatures': 'Funzionalità Principali',
  'angular.sections.bestPractices': 'Best Practices',
  'angular.sections.technologies': 'Tecnologie Utilizzate',
  'angular.sections.examples': 'Esempi di Codice',
  'angular.sections.advanced': 'Argomenti Avanzati',
  'angular.sections.architecture': 'Pattern Architetturali',
  'angular.sections.tools': 'CLI & DevTools',
  'angular.features.signals.title': 'Signals',
  'angular.features.signals.description': 'Gestione dello stato reattiva con signal(), computed() ed effect() per prestazioni ottimali',
  'angular.features.standalone.title': 'Componenti Standalone',
  'angular.features.standalone.description': 'Architettura senza moduli - i componenti sono standalone per impostazione predefinita',
  'angular.features.inject.title': 'Funzione inject()',
  'angular.features.inject.description': 'Dependency injection con inject() invece dell\'iniezione tramite costruttore',
  'angular.features.controlFlow.title': 'Control Flow',
  'angular.features.controlFlow.description': 'Sintassi nativa @if, @for, @switch invece di direttive strutturali',
  'angular.features.deferrable.title': 'Viste Differibili (@defer)',
  'angular.features.deferrable.description': 'Caricamento differito dei template con blocchi @defer, @placeholder, @loading e @error',
  'angular.features.inputOutput.title': 'Funzioni input() & output()',
  'angular.features.inputOutput.description': 'Input e Output del componente basati sui signal sostituiscono i decorator @Input() e @Output()',
  'angular.features.viewQueries.title': 'viewChild() & viewChildren()',
  'angular.features.viewQueries.description': 'Query di vista basate sui signal per accesso type-safe a componenti figlio ed elementi DOM',
  'angular.features.model.title': 'model() per Binding Bidirezionale',
  'angular.features.model.description': 'Binding dati bidirezionale semplificato con WritableSignal per comunicazione bidirezionale',
  'angular.features.onPush.title': 'Rilevamento OnPush',
  'angular.features.onPush.description': 'Prestazioni ottimizzate tramite ChangeDetectionStrategy.OnPush',
  'angular.features.httpClient.title': 'HttpClient con Signals',
  'angular.features.httpClient.description': 'Comunicazione HTTP moderna con provideHttpClient(withFetch())',
  'angular.features.resource.title': 'API Resource (Sperimentale)',
  'angular.features.resource.description': 'Richieste HTTP dichiarative con gestione automatica dello stato di caricamento e degli errori',
  'angular.features.typedForms.title': 'Form Reattivi Tipizzati',
  'angular.features.typedForms.description': 'Form completamente tipizzati con FormControl<T>, FormGroup<T> e FormArray<T>',
  'angular.features.router.title': 'Router Standalone',
  'angular.features.router.description': 'Routing funzionale con provideRouter(), Guard, Resolver e Lazy Loading',
  'angular.features.material.title': 'Material Design 3',
  'angular.features.material.description': 'Componenti Angular Material con tematizzazione Material Design 3 e Accessibilità',
  'angular.features.devtools.title': 'Angular DevTools',
  'angular.features.devtools.description': 'Estensione browser per ispezione componenti, profilazione e debug della dependency injection',
  'angular.features.vite.title': 'Vite & ESBuild',
  'angular.features.vite.description': 'Tempi di build ultra-rapidi con server di sviluppo Vite e ESBuild per build di produzione',
  'angular.bestPractices.components.title': 'Componenti',
  'angular.bestPractices.components.item1': 'Componenti piccoli e mirati con responsabilità singola',
  'angular.bestPractices.components.item2': 'Usare le funzioni input() e output() invece dei decorator',
  'angular.bestPractices.components.item3': 'Preferire template inline per componenti piccoli',
  'angular.bestPractices.components.item4': 'Rilevamento delle modifiche OnPush per prestazioni ottimali',
  'angular.bestPractices.components.item5': 'Usare i binding class e style invece di ngClass/ngStyle',
  'angular.bestPractices.components.item6': 'Implementare i lifecycle hook (OnInit, OnDestroy, ecc.)',
  'angular.bestPractices.components.item7': 'Protected per membri solo template, private per logica interna',
  'angular.bestPractices.components.item8': 'Estrarre la logica template complessa in signals computed()',
  'angular.bestPractices.state.title': 'Gestione dello Stato',
  'angular.bestPractices.state.item1': 'Usare signals per lo stato locale del componente',
  'angular.bestPractices.state.item2': 'Usare computed() per lo stato derivato',
  'angular.bestPractices.state.item3': 'Mantenere le trasformazioni di stato pure e prevedibili',
  'angular.bestPractices.state.item4': 'Usare update() o set(), mai mutate()',
  'angular.bestPractices.state.item5': 'Usare effect() solo per effetti collaterali, non aggiornamenti di stato',
  'angular.bestPractices.state.item6': 'Usare untracked() per evitare dipendenze circolari',
  'angular.bestPractices.templates.title': 'Templates',
  'angular.bestPractices.templates.item1': 'Usare il control flow nativo (@if, @for, @switch)',
  'angular.bestPractices.templates.item2': 'Mantenere i template semplici, evitare logica complessa',
  'angular.bestPractices.templates.item3': 'Usare il pipe async per gli observables',
  'angular.bestPractices.templates.item4': 'Usare trackBy con @for per rendering di liste efficiente',
  'angular.bestPractices.templates.item5': 'Usare @defer per lazy loading di componenti pesanti',
  'angular.bestPractices.services.title': 'Services',
  'angular.bestPractices.services.item1': 'Progettare i servizi con responsabilità singola',
  'angular.bestPractices.services.item2': 'Usare providedIn: "root" per i servizi singleton',
  'angular.bestPractices.services.item3': 'Usare la funzione inject() invece dell\'iniezione tramite costruttore',
  'angular.bestPractices.services.item4': 'Esporre lo stato readonly con signals privati per le mutazioni',
  'angular.bestPractices.services.item5': 'Separare la logica di servizio dalla logica di presentazione',
  'angular.bestPractices.performance.title': 'Prestazioni',
  'angular.bestPractices.performance.item1': 'Usare sistematicamente il rilevamento delle modifiche OnPush',
  'angular.bestPractices.performance.item2': 'Implementare il lazy loading per le route delle funzionalità',
  'angular.bestPractices.performance.item3': 'Usare NgOptimizedImage per le immagini statiche',
  'angular.bestPractices.performance.item4': 'Usare trackBy con @for per un rendering ottimale',
  'angular.bestPractices.performance.item5': 'Usare @defer per caricamento componenti on-demand',
  'angular.bestPractices.performance.item6': 'Preferire pipe pure (predefinite), impure solo se necessario',
  'angular.bestPractices.performance.item7': 'Usare Web Workers per calcoli intensivi della CPU',
  'angular.bestPractices.typescript.title': 'TypeScript',
  'angular.bestPractices.typescript.item1': 'Controllo di tipo rigoroso attivato',
  'angular.bestPractices.typescript.item2': 'Usare l\'inferenza di tipo quando è ovvio',
  'angular.bestPractices.typescript.item3': 'Evitare any, usare unknown in caso di incertezza',
  'angular.bestPractices.typescript.item4': 'Usare readonly per proprietà che non cambiano',
  'angular.bestPractices.typescript.item5': 'Usare const per tutte le variabili che non vengono riassegnate',
  'angular.bestPractices.typescript.item6': 'Tipi di ritorno espliciti per metodi API pubblici',
  'angular.bestPractices.accessibility.title': 'Accessibilità (a11y)',
  'angular.bestPractices.accessibility.item1': 'Usare elementi HTML semantici',
  'angular.bestPractices.accessibility.item2': 'Aggiungere etichette ARIA per contenuti dinamici',
  'angular.bestPractices.accessibility.item3': 'Navigazione da tastiera per tutti gli elementi interattivi',
  'angular.bestPractices.accessibility.item4': 'Contrasti di colore sufficienti (WCAG 2.1 AA)',
  'angular.bestPractices.accessibility.item5': 'Gestione del focus per dialoghi modali e route',
  'angular.bestPractices.testing.title': 'Testing',
  'angular.bestPractices.testing.item1': 'Scrivere unit test per tutta la logica di business',
  'angular.bestPractices.testing.item2': 'Usare TestBed per test di componenti con dependency injection',
  'angular.bestPractices.testing.item3': 'Testare signals con TestBed.inject() e fixture.detectChanges()',
  'angular.bestPractices.testing.item4': 'Mockare i servizi per test di componenti isolati',
  'angular.bestPractices.testing.item5': 'Test E2E per percorsi utente critici (Cypress/Playwright)',
  'angular.bestPractices.errorHandling.title': 'Gestione degli Errori',
  'angular.bestPractices.errorHandling.item1': 'Implementare un gestore di errori globale per errori imprevisti',
  'angular.bestPractices.errorHandling.item2': 'Usare un interceptor HTTP per gestione centralizzata errori API',
  'angular.bestPractices.errorHandling.item3': 'Usare catchError() per gestione errori observable',
  'angular.bestPractices.errorHandling.item4': 'Mostrare messaggi di errore user-friendly con contesto',
  'angular.bestPractices.security.title': 'Sicurezza',
  'angular.bestPractices.security.item1': 'Usare la sanitizzazione per input utente (protezione XSS)',
  'angular.bestPractices.security.item2': 'Usare token CSRF per richieste che modificano lo stato',
  'angular.bestPractices.security.item3': 'Usare un interceptor HTTP per header di autorizzazione',
  'angular.bestPractices.security.item4': 'Non memorizzare mai dati sensibili in localStorage',
  'angular.bestPractices.security.item5': 'Configurare la Content Security Policy (CSP)',
  'angular.bestPractices.codeOrganization.title': 'Organizzazione del Codice',
  'angular.bestPractices.codeOrganization.item1': 'Organizzare per funzionalità, non per tipi di file',
  'angular.bestPractices.codeOrganization.item2': 'Modulo Shared/Common per componenti riutilizzabili',
  'angular.bestPractices.codeOrganization.item3': 'Modulo Core per servizi singleton e guards',
  'angular.bestPractices.codeOrganization.item4': 'Un concetto per file (componente, servizio, ecc.)',
  'angular.bestPractices.codeOrganization.item5': 'File index (index.ts) per export di API pubbliche',
  'angular.bestPractices.dependency.title': 'Gestione delle Dipendenze',
  'angular.bestPractices.dependency.item1': 'Aggiornare le dipendenze regolarmente (ng update)',
  'angular.bestPractices.dependency.item2': 'Prestare attenzione alle peer dependencies e compatibilità',
  'angular.bestPractices.dependency.item3': 'Monitorare la dimensione del bundle con source-map-explorer',
  'angular.bestPractices.dependency.item4': 'Usare provider tree-shakeable (providedIn)',
  'angular.bestPractices.buildDeploy.title': 'Build & Deployment',
  'angular.bestPractices.buildDeploy.item1': 'Build di produzione con --configuration=production',
  'angular.bestPractices.buildDeploy.item2': 'Compilazione AOT per migliori prestazioni',
  'angular.bestPractices.buildDeploy.item3': 'Usare configurazioni specifiche per ambiente',
  'angular.bestPractices.buildDeploy.item4': 'Abilitare source maps solo in sviluppo',
  'angular.bestPractices.buildDeploy.item5': 'Pipeline CI/CD per test e deployment automatizzati',
  'angular.examples.signals.title': 'Esempio Signals',
  'angular.examples.signals.subtitle': 'Gestione dello Stato Reattiva',
  'angular.examples.signals.description': 'I signals offrono un modo semplice e performante per gestire lo stato reattivo.',
  'angular.examples.inject.title': 'Dependency Injection',
  'angular.examples.inject.subtitle': 'DI moderna con inject()',
  'angular.examples.inject.description': 'La funzione inject() consente una dependency injection più pulita e leggibile.',
  'angular.examples.controlFlow.title': 'Control Flow',
  'angular.examples.controlFlow.subtitle': 'Sintassi Template Nativa',
  'angular.examples.controlFlow.description': 'La sintassi nativa @if, @else è più intuitiva e performante di *ngIf.',
  'angular.actions.title': 'Pronto per di più?',
  'angular.actions.description': 'Esplora più funzionalità e progetti sul mio portfolio o scopri di più su Angular.',
  'angular.actions.backHome': 'Torna alla home',
  'angular.actions.learnMore': 'Scopri di Più su Angular',

  // Detailed Code Examples
  'angular.sections.detailedExamples': 'Esempi di Codice Dettagliati',
  'angular.sections.detailedExamplesDesc': 'Implementazioni pratiche dei pattern Angular v20 moderni',
  'angular.codeExamples.signals.title': 'API Signals',
  'angular.codeExamples.signals.subtitle': 'Gestione dello Stato Reattiva',
  'angular.codeExamples.signals.description': 'I Signals offrono un\'API semplice e performante per lo stato reattivo. Con signal(), computed() ed effect() i flussi di dati complessi possono essere implementati elegantemente.',
  'angular.codeExamples.component.title': 'Componente Moderno',
  'angular.codeExamples.component.subtitle': 'input(), output() & model()',
  'angular.codeExamples.component.description': 'Le nuove API basate su signals per Inputs, Outputs e Two-Way Binding sostituiscono i decorator Property/Event.',
  'angular.codeExamples.controlFlow.title': 'Sintassi Control Flow',
  'angular.codeExamples.controlFlow.subtitle': '@if, @for, @switch',
  'angular.codeExamples.controlFlow.description': 'Sintassi di template nativa per condizioni e cicli - più performante e intuitiva delle direttive strutturali.',
  'angular.codeExamples.service.title': 'Service con Signals',
  'angular.codeExamples.service.subtitle': 'Pattern di Gestione dello Stato',
  'angular.codeExamples.service.description': 'I services usano Signals per la gestione dello stato con stato esposto readonly e mutazioni private.',
  'angular.codeExamples.routing.title': 'Routing Lazy Loading',
  'angular.codeExamples.routing.subtitle': 'loadComponent & loadChildren',
  'angular.codeExamples.routing.description': 'Gli Standalone Components permettono un semplice lazy loading senza NgModules.',
  'angular.codeExamples.forms.title': 'Reactive Forms',
  'angular.codeExamples.forms.subtitle': 'FormControl con Signals',
  'angular.codeExamples.forms.description': 'Reactive Forms con toSignal() per un\'integrazione ottimale di RxJS e Signals.',
  'angular.codeExamples.rxjs.title': 'RxJS Interop',
  'angular.codeExamples.rxjs.subtitle': 'toSignal & toObservable',
  'angular.codeExamples.rxjs.description': 'Integrazione trasparente tra Signals e Observables con le funzioni di interop.',
  'angular.codeExamples.guards.title': 'Guards Funzionali',
  'angular.codeExamples.guards.subtitle': 'Protezione delle Route',
  'angular.codeExamples.guards.description': 'Guards moderni come funzioni invece di classi - più semplice e testabile.',
  'angular.codeExamples.pipes.title': 'Pipes Personalizzati',
  'angular.codeExamples.pipes.subtitle': 'Transform & Pure',
  'angular.codeExamples.pipes.description': 'Pure Pipes per trasformazione dati efficiente con caching automatico.',
  'angular.codeExamples.interceptor.title': 'HTTP Interceptor',
  'angular.codeExamples.interceptor.subtitle': 'Interceptor Funzionali',
  'angular.codeExamples.interceptor.description': 'Interceptor funzionali moderni con inject() per auth e gestione errori.',
  'angular.codeExamples.directive.title': 'Directive Personalizzate',
  'angular.codeExamples.directive.subtitle': 'Basate su Signals',
  'angular.codeExamples.directive.description': 'Directive con signal inputs e host bindings senza decorator.',
  'angular.codeExamples.deferrable.title': 'Viste Differibili',
  'angular.codeExamples.deferrable.subtitle': 'Sintassi @defer',
  'angular.codeExamples.deferrable.description': 'Caricamento differito di template con blocchi @defer, @placeholder e @loading.',
  'angular.codeExamples.viewChild.title': 'View Queries',
  'angular.codeExamples.viewChild.subtitle': 'viewChild & viewChildren',
  'angular.codeExamples.viewChild.description': 'Query di vista basate su signals per accesso type-safe a componenti ed elementi.',
  'angular.codeExamples.hostBinding.title': 'Host Bindings',
  'angular.codeExamples.hostBinding.subtitle': 'Host del Componente',
  'angular.codeExamples.hostBinding.description': 'Host bindings dichiarativi per class, style, attributi ed eventi nell\'oggetto host.',
  'angular.codeExamples.contentChild.title': 'Proiezione di Contenuto',
  'angular.codeExamples.contentChild.subtitle': 'Query contentChild',
  'angular.codeExamples.contentChild.description': 'Query di contenuto con contentChild e contentChildren per accesso ng-content.',
  'angular.codeExamples.testing.title': 'Test dei Componenti',
  'angular.codeExamples.testing.subtitle': 'Jasmine & TestBed',
  'angular.codeExamples.testing.description': 'Test unitari per signals, valori computed e interazioni dei componenti.',
  'angular.codeExamples.resource.title': 'API Resource',
  'angular.codeExamples.resource.subtitle': 'Richieste HTTP Dichiarative',
  'angular.codeExamples.resource.description': 'API Resource sperimentale per gestione automatica dello stato di caricamento, errori e dati.',
  'angular.codeExamples.animations.title': 'Animazioni',
  'angular.codeExamples.animations.subtitle': 'Angular Animations',
  'angular.codeExamples.animations.description': 'Animazioni dichiarative con trigger, stati, transizioni e sequenze complesse.',
  'angular.codeExamples.stateManagement.title': 'Gestione dello Stato',
  'angular.codeExamples.stateManagement.subtitle': 'Store Centrale dell\'App',
  'angular.codeExamples.stateManagement.description': 'Store centrale basato su signals con stato computed e azioni per gestione dello stato globale.',
  'angular.codeExamples.httpSignals.title': 'HTTP con Signals',
  'angular.codeExamples.httpSignals.subtitle': 'toSignal & toObservable',
  'angular.codeExamples.httpSignals.description': 'Comunicazione HTTP reattiva con toSignal per conversione da Observable a Signal.',
  'angular.codeExamples.performance.title': 'Ottimizzazione delle Prestazioni',
  'angular.codeExamples.performance.subtitle': 'OnPush & TrackBy',
  'angular.codeExamples.performance.description': 'Best practices per prestazioni ottimali: OnPush, TrackBy, Virtual Scrolling e Lazy Loading.',

  // Advanced Topics
  'angular.advanced.routing.title': 'Routing & Navigazione',
  'angular.advanced.routing.description': 'Potente sistema di routing con guards, resolvers e lazy loading',
  'angular.advanced.routing.topic1': 'Functional Route Guards (canActivate, canDeactivate)',
  'angular.advanced.routing.topic2': 'Route Resolvers per precaricamento dati',
  'angular.advanced.routing.topic3': 'Lazy Loading con loadComponent() e loadChildren()',
  'angular.advanced.routing.topic4': 'Child Routes e layout annidati',
  'angular.advanced.routing.topic5': 'Route Parameters e Query Parameters',
  'angular.advanced.routing.topic6': 'Strategie di precaricamento per prestazioni ottimali',
  'angular.advanced.forms.title': 'Reactive Forms',
  'angular.advanced.forms.description': 'Gestione di form type-safe con validazione e controlli dinamici',
  'angular.advanced.forms.topic1': 'Typed Reactive Forms con FormControl<T>',
  'angular.advanced.forms.topic2': 'Validatori personalizzati (sync & async)',
  'angular.advanced.forms.topic3': 'Form dinamici con FormBuilder e FormArray',
  'angular.advanced.forms.topic4': 'Gestione stato con valueChanges e statusChanges',
  'angular.advanced.forms.topic5': 'Custom Form Controls con ControlValueAccessor',
  'angular.advanced.forms.topic6': 'Gestione e visualizzazione errori di validazione',
  'angular.advanced.rxjs.title': 'RxJS Patterns & Operatori',
  'angular.advanced.rxjs.description': 'Programmazione reattiva con Observables, Subjects e Operatori',
  'angular.advanced.rxjs.topic1': 'toSignal() e toObservable() per interop Signal/Observable',
  'angular.advanced.rxjs.topic2': 'Operatori di ordine superiore (switchMap, mergeMap, concatMap)',
  'angular.advanced.rxjs.topic3': 'Gestione errori con catchError e retry',
  'angular.advanced.rxjs.topic4': 'Multicasting con Subject, BehaviorSubject, ReplaySubject',
  'angular.advanced.rxjs.topic5': 'Operatori di combinazione (combineLatest, forkJoin, zip)',
  'angular.advanced.rxjs.topic6': 'Prevenzione memory leak e pattern Unsubscribe',
  'angular.advanced.changeDetection.title': 'Change Detection approfondita',
  'angular.advanced.changeDetection.description': 'Ottimizzazione Change Detection per massime prestazioni',
  'angular.advanced.changeDetection.topic1': 'Strategie Default vs OnPush Change Detection',
  'angular.advanced.changeDetection.topic2': 'Zone.js e NgZone per aggiornamenti asincroni',
  'angular.advanced.changeDetection.topic3': 'Change Detection manuale con ChangeDetectorRef',
  'angular.advanced.changeDetection.topic4': 'Signals e Change Detection senza Zone',
  'angular.advanced.changeDetection.topic5': 'Profilazione prestazioni con Angular DevTools',
  'angular.advanced.animations.title': 'API Animations',
  'angular.advanced.animations.description': 'Animazioni dichiarative con Angular Animations',
  'angular.advanced.animations.topic1': 'Animazioni basate su stati con trigger, state, transition',
  'angular.advanced.animations.topic2': 'Animazioni Enter/Leave per @if e @for',
  'angular.advanced.animations.topic3': 'Keyframe Animations e curve di animazione',
  'angular.advanced.animations.topic4': 'Callbacks ed eventi di animazione',
  'angular.advanced.animations.topic5': 'Funzioni di animazione riutilizzabili',
  'angular.advanced.testing.title': 'Strategie di testing',
  'angular.advanced.testing.description': 'Testing completo con Jasmine, Karma e Playwright',
  'angular.advanced.testing.topic1': 'Test componenti con TestBed e ComponentFixture',
  'angular.advanced.testing.topic2': 'Test Signals con TestBed.inject() e runInInjectionContext',
  'angular.advanced.testing.topic3': 'Mocking servizi e pattern Spy',
  'angular.advanced.testing.topic4': 'HttpClientTestingModule per test HTTP',
  'angular.advanced.testing.topic5': 'Test E2E con Playwright o Cypress',
  'angular.advanced.testing.topic6': 'Code Coverage e report di test',
  'angular.advanced.ssr.title': 'Server-Side Rendering & Hydration',
  'angular.advanced.ssr.description': 'SSR per migliori prestazioni, SEO e Core Web Vitals',
  'angular.advanced.ssr.topic1': 'Setup e configurazione Angular Universal',
  'angular.advanced.ssr.topic2': 'Hydration non-distruttiva per transizione client fluida',
  'angular.advanced.ssr.topic3': 'Static Site Generation (SSG) con Prerendering',
  'angular.advanced.ssr.topic4': '@defer per Hydration progressiva',
  'angular.advanced.ssr.topic5': 'Transfer State per trasferimento dati server-client',
  'angular.advanced.ssr.topic6': 'Codice specifico piattaforma con isPlatformBrowser/Server',
  'angular.advanced.i18n.title': 'Internazionalizzazione (i18n)',
  'angular.advanced.i18n.description': 'Supporto multi-lingua e localizzazione',
  'angular.advanced.i18n.topic1': 'Servizio traduzione personalizzato con Signals',
  'angular.advanced.i18n.topic2': '@angular/localize per traduzione Build-Time',
  'angular.advanced.i18n.topic3': 'Formato ICU per plurali e Select',
  'angular.advanced.i18n.topic4': 'Cambio lingua Runtime',
  'angular.advanced.i18n.topic5': 'Pipes Date, Number, Currency con Locale',
  'angular.advanced.security.title': 'Best practice di sicurezza',
  'angular.advanced.security.description': 'Funzionalità di sicurezza integrate e best practices',
  'angular.advanced.security.topic1': 'DomSanitizer per protezione XSS con HTML dinamico',
  'angular.advanced.security.topic2': 'Protezione CSRF con HttpClient',
  'angular.advanced.security.topic3': 'Configurazione Content Security Policy (CSP)',
  'angular.advanced.security.topic4': 'Supporto API Trusted Types',
  'angular.advanced.security.topic5': 'Autenticazione sicura con JWT e HTTP Interceptors',
  'angular.advanced.security.topic6': 'Applicazione HTTPS e Cookies sicuri',
  'angular.advanced.directives.title': 'Directives avanzate',
  'angular.advanced.directives.description': 'Directives strutturali e di attributo per template avanzati',
  'angular.advanced.directives.topic1': 'Directives strutturali personalizzate con ng-template',
  'angular.advanced.directives.topic2': 'Directives attributo con Signal Inputs',
  'angular.advanced.directives.topic3': 'Host Bindings e Host Listeners nell\'oggetto host',
  'angular.advanced.directives.topic4': 'API composizione Directive',
  'angular.advanced.directives.topic5': 'Renderer2 per manipolazione DOM platform-safe',
  'angular.advanced.pipes.title': 'Pipes personalizzati',
  'angular.advanced.pipes.description': 'Pipes puri e impuri per trasformazione dati',
  'angular.advanced.pipes.topic1': 'Pipes puri con cache automatico',
  'angular.advanced.pipes.topic2': 'Pipes impuri per dati dinamici',
  'angular.advanced.pipes.topic3': 'Async Pipe per gestione Observable/Promise',
  'angular.advanced.pipes.topic4': 'Pipes parametrizzati',
  'angular.advanced.pipes.topic5': 'Considerazioni prestazioni e best practices',
  'angular.advanced.httpInterceptors.title': 'HTTP Interceptors',
  'angular.advanced.httpInterceptors.description': 'Intercettazione Request/Response per auth, logging e gestione errori',
  'angular.advanced.httpInterceptors.topic1': 'Interceptors funzionali con HttpInterceptorFn',
  'angular.advanced.httpInterceptors.topic2': 'Interceptor autenticazione per JWT Tokens',
  'angular.advanced.httpInterceptors.topic3': 'Gestione errori e logica retry',
  'angular.advanced.httpInterceptors.topic4': 'Logging Request/Response',
  'angular.advanced.httpInterceptors.topic5': 'Interceptors multipli e ordine esecuzione',
  'angular.advanced.stateManagement.title': 'Pattern gestione stato',
  'angular.advanced.stateManagement.description': 'Diversi approcci per gestione stato applicazione',
  'angular.advanced.stateManagement.topic1': 'Gestione stato basata su Signals con Services',
  'angular.advanced.stateManagement.topic2': 'NgRx Store per gestione stato complessa',
  'angular.advanced.stateManagement.topic3': 'NGRX Signal Store (nuova API basata su Signals)',
  'angular.advanced.stateManagement.topic4': 'Component Store per stato feature locale',
  'angular.advanced.stateManagement.topic5': 'Gestione stato basata su RxJS con BehaviorSubject',
  'angular.advanced.moduleFederation.title': 'Module Federation',
  'angular.advanced.moduleFederation.description': 'Architettura Micro-Frontend con Webpack Module Federation',
  'angular.advanced.moduleFederation.topic1': 'Setup con @angular-architects/module-federation',
  'angular.advanced.moduleFederation.topic2': 'Caricamento moduli remoti al runtime',
  'angular.advanced.moduleFederation.topic3': 'Gestione dipendenze condivise',
  'angular.advanced.moduleFederation.topic4': 'Pattern comunicazione Micro-Frontend',
  'angular.advanced.pwa.title': 'Progressive Web Apps (PWA)',
  'angular.advanced.pwa.description': 'Esperienza app-like con Service Workers e supporto offline',
  'angular.advanced.pwa.topic1': 'Setup e configurazione @angular/pwa',
  'angular.advanced.pwa.topic2': 'Strategie cache Service Worker',
  'angular.advanced.pwa.topic3': 'Supporto offline e Background Sync',
  'angular.advanced.pwa.topic4': 'Notifiche Push',
  'angular.advanced.pwa.topic5': 'Manifesto app e prompt installazione',
  'angular.architecture.smartDumb.title': 'Smart & Dumb Components',
  'angular.architecture.smartDumb.description': 'Separazione dei componenti container (smart) e di presentazione (dumb) per una migliore manutenibilità',
  'angular.architecture.facade.title': 'Pattern Facade',
  'angular.architecture.facade.description': 'API semplificata per logica complessa di gestione dello stato',
  'angular.architecture.module.title': 'Moduli di Funzionalità',
  'angular.architecture.module.description': 'Organizzazione delle funzionalità in moduli riutilizzabili',
  'angular.architecture.lazy.title': 'Lazy Loading',
  'angular.architecture.lazy.description': 'Caricamento on-demand delle funzionalità per caricamenti iniziali più veloci',
  'angular.architecture.repository.title': 'Pattern Repository',
  'angular.architecture.repository.description': 'Livello di accesso ai dati centralizzato per comunicazione API e caching',
  'angular.architecture.observer.title': 'Pattern Observer',
  'angular.architecture.observer.description': 'Comunicazione basata su eventi con RxJS Observables e Subjects',
  'angular.architecture.singleton.title': 'Pattern Singleton',
  'angular.architecture.singleton.description': 'Servizi condivisi con providedIn: "root" per stato a livello di applicazione',
  'angular.architecture.decorator.title': 'Pattern Decorator',
  'angular.architecture.decorator.description': 'Estensione della funzionalità con @Component, @Injectable e decorator personalizzati',
  'angular.architecture.strategy.title': 'Pattern Strategy',
  'angular.architecture.strategy.description': 'Algoritmi intercambiabili con Change Detection Strategies e Guards',
  'angular.architecture.adapter.title': 'Pattern Adapter',
  'angular.architecture.adapter.description': 'Trasformazione di API esterne in interfacce interne con services',
  'angular.architecture.featureSlice.title': 'Architettura Feature-Slice',
  'angular.architecture.featureSlice.description': 'Organizzazione per funzionalità invece che per tipi - ogni feature contiene componenti, servizi, stato',
  'angular.architecture.cleanArchitecture.title': 'Clean Architecture',
  'angular.architecture.cleanArchitecture.description': 'Separazione in layer: Presentazione, Dominio, Dati - dipendenze puntano verso l\'interno',
  'angular.architecture.cqrs.title': 'Pattern CQRS',
  'angular.architecture.cqrs.description': 'Command Query Responsibility Segregation - separazione delle operazioni di lettura e scrittura',
  'angular.architecture.eventDriven.title': 'Architettura Event-Driven',
  'angular.architecture.eventDriven.description': 'Componenti debolmente accoppiati comunicano tramite eventi e observables',
  'angular.architecture.microFrontends.title': 'Micro Frontend',
  'angular.architecture.microFrontends.description': 'Architettura frontend modulare con Module Federation e team indipendenti',
  'angular.architecture.ddd.title': 'Domain-Driven Design',
  'angular.architecture.ddd.description': 'Modellazione di logica business complessa con Aggregates, Entities e Value Objects',
  'angular.architecture.hexagonal.title': 'Architettura Esagonale',
  'angular.architecture.hexagonal.description': 'Pattern Ports & Adapters - logica business isolata dall\'infrastruttura esterna',
  'angular.architecture.stateManagement.title': 'Gestione dello Stato Centralizzata',
  'angular.architecture.stateManagement.description': 'Stato dell\'app centralizzato con Signal Store, NgRx o Akita per flusso dati prevedibile',
  'angular.architecture.onion.title': 'Architettura Onion',
  'angular.architecture.onion.description': 'Architettura a strati con Domain Core al centro, circondato da Application e Infrastructure',
  'angular.architecture.mvvm.title': 'Pattern MVVM',
  'angular.architecture.mvvm.description': 'Pattern Model-View-ViewModel con Reactive Forms e Data Binding come layer ViewModel',
  'angular.tools.cli.title': 'Angular CLI',
  'angular.tools.cli.description': 'Interfaccia a riga di comando per uno sviluppo rapido',
  'angular.tools.devtools.title': 'Angular DevTools',
  'angular.tools.devtools.description': 'Estensione del browser per debugging e profilazione',
  'angular.tools.devtools.feature1': 'Ispettore dell\'albero dei componenti',
  'angular.tools.devtools.feature2': 'Visualizzatore dell\'iniezione di dipendenze',
  'angular.tools.devtools.feature3': 'Profiler delle prestazioni',
  'angular.tools.devtools.feature4': 'Debugger del rilevamento delle modifiche',
  'angular.tools.build.title': 'Sistema di Build',
  'angular.tools.build.description': 'Sistema di build moderno con Vite e ESBuild',
  'angular.tools.build.feature1': 'Tempi di build estremamente rapidi',
  'angular.tools.build.feature2': 'Hot Module Replacement (HMR)',
  'angular.tools.build.feature3': 'Build di produzione ottimizzati',
  'angular.tools.build.feature4': 'Supporto Source Maps',

  // Crypto Detail Modal
  'crypto.detail.loading': 'Caricamento dettagli...',
  'crypto.detail.loadingSubtitle': 'Recupero informazioni dettagliate',
  'crypto.detail.error.title': 'Errore di caricamento',
  'crypto.detail.error.retry': 'Riprova',
  'crypto.detail.close': 'Chiudi',
  'crypto.detail.rank': 'Posizione di mercato',
  'crypto.detail.currentPrice': 'Prezzo attuale',
  'crypto.detail.marketStats': 'Statistiche di mercato',
  'crypto.detail.title': 'Dettagli di',
  'crypto.detail.price': 'Prezzo attuale',
  'crypto.detail.marketCap': 'Capitalizzazione di mercato',
  'crypto.detail.volume': 'Volume 24h',
  'crypto.detail.circulatingSupply': 'Offerta circolante',
  'crypto.detail.totalSupply': 'Offerta totale',
  'crypto.detail.maxSupply': 'Offerta massima',
  'crypto.detail.allTimeHigh': 'Massimo storico',
  'crypto.detail.allTimeLow': 'Minimo storico',
  'crypto.detail.about': 'Informazioni',
  'crypto.detail.links': 'Link',
  'crypto.detail.website': 'Sito web',

  // Footer
  'crypto.backToHome.button': 'Torna alla home',
  'crypto.backToHome.tooltip': 'Torna alla pagina principale',

  // Footer
  'footer.copyright': '2025 Mike Diethelm. Realizzato con Angular 20.',
  'footer.github.title': 'Profilo GitHub',
  'footer.linkedin.title': 'Profilo LinkedIn',
  'footer.techstack': 'Angular • Material Design 3 • TypeScript'
};
