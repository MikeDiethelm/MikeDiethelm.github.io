import { Translations } from '../translation.service';

export const IT_TRANSLATIONS: Translations = {
  // Navigation
  'nav.home': 'Home',
  'nav.weather': 'Meteo',
  'nav.crypto': 'Crypto',
  'nav.angular': 'Angular',
  'nav.features': 'Funzionalità',

  // Home Component
  'home.greeting': 'Ciao, sono',
  'home.subtitle': 'Sviluppatore Fullstack',
  'home.intro': 'Benvenuto nel mio portfolio! Sono uno sviluppatore appassionato con focus su Angular e tecnologie web moderne. Qui dimostro le mie competenze attraverso varie funzionalità e progetti.',
  'home.linkedin': 'LinkedIn',
  'home.cta.viewPortfolio': 'Vedi il portfolio',
  'home.cta.contact': 'Contattami',
  'home.stats.yearsExperience': 'Anni di esperienza',
  'home.stats.projects': 'Progetti',
  'home.stats.technologies': 'Tecnologie',
  'home.stats.engagement': 'Impegno',
  'home.skills.title': 'La mia esperienza',
  'home.skills.subtitle': 'Tecnologie e strumenti che uso quotidianamente',
  'home.skills.frontend': 'Frontend',
  'home.skills.backend': 'Backend & APIs',
  'home.skills.tools': 'Strumenti & DevOps',
  'home.projects.title': 'Progetti selezionati',
  'home.projects.subtitle': 'Scopri i miei ultimi lavori e dimostrazioni tecniche',
  'home.projects.viewAll': 'Vedi tutti i progetti',
  'home.features.title': 'Dimostrazioni di funzionalità',
  'home.features.weather.title': 'App Meteo',
  'home.features.weather.description': 'Applicazione meteo completa con integrazione API gratuita',
  'home.features.weather.button': 'Vedi Meteo',
  'home.features.crypto.title': 'Tracker Crypto',
  'home.features.crypto.description': 'Prezzi in tempo reale e variazioni 24h delle top criptovalute',
  'home.features.crypto.button': 'Vedi Crypto',
  'home.features.angular.title': 'Angular v20 Best Practices',
  'home.features.angular.description': 'Riepilogo completo dello sviluppo Angular moderno con Signals e Standalone Components',
  'home.features.angular.button': 'Vedi Angular',
  'home.features.all.button': 'Tutte le funzionalità',

  // Technology names
  'tech.angular': 'Angular',
  'tech.typescript': 'TypeScript',
  'tech.scss': 'SCSS',
  'tech.material': 'Material Design',
  'tech.rxjs': 'RxJS',
  'tech.restful': 'API RESTful',
  'tech.httpclient': 'HttpClient',
  'tech.state': 'Gestione dello stato',
  'tech.node': 'Node.js',
  'tech.git': 'Git',
  'tech.vscode': 'VS Code',
  'tech.npm': 'NPM',
  'tech.webpack': 'Webpack',
  'tech.openweather': 'API OpenWeather',
  'tech.coingecko': 'API CoinGecko',
  'tech.charts': 'Grafici',

  // Weather Component
  'weather.title': 'Previsioni meteo',
  'weather.subtitle': 'Dati meteo attuali per la tua città',
  'weather.search.label': 'Inserisci città',
  'weather.search.placeholder': 'es. Berlino, Monaco, Zurigo...',
  'weather.search.button': 'Cerca',
  'weather.loading': 'Caricamento...',
  'weather.error': 'Errore nel caricamento dei dati meteo',
  'weather.error.title': 'Errore verificato',
  'weather.error.tip': 'Suggerimento',
  'weather.error.suggestion': 'Controlla l\'ortografia o prova un altro nome di città',
  'weather.error.close': 'Chiudi',
  'weather.popular.title': 'Città popolari',
  'weather.refresh': 'Aggiorna',
  'weather.lastUpdated': 'Ultimo aggiornamento',
  'weather.backToHome.button': 'Torna alla home',
  'weather.backToHome.tooltip': 'Torna alla pagina principale',
  'weather.feelsLike': 'Percepita',
  'weather.minMax': 'Min/Max',
  'weather.humidity': 'Umidità',
  'weather.pressure': 'Pressione',
  'weather.wind': 'Vento',
  'weather.sunrise': 'Alba',
  'weather.sunset': 'Tramonto',

  // Crypto Component
  'crypto.title': 'Criptovalute',
  'crypto.subtitle': 'Prezzi in tempo reale delle top criptovalute',
  'crypto.loading': 'Caricamento...',
  'crypto.refresh.button': 'Aggiorna',
  'crypto.refresh.tooltip': 'Ricarica dati',
  'crypto.currency.label': 'Valuta:',

  'crypto.error.title': 'Errore di caricamento',
  'crypto.error.dismiss': 'Chiudi',
  'crypto.lastUpdate': 'Ultimo aggiornamento',
  'crypto.dataStale': 'I dati potrebbero essere obsoleti',
  'crypto.topCurrencies': 'Top Criptovalute',
  'crypto.table.rank': 'Posizione',
  'crypto.table.name': 'Nome',
  'crypto.table.price': 'Prezzo',
  'crypto.table.change24h': 'Variazione 24h',
  'crypto.table.marketCap': 'Capitalizzazione',
  'crypto.marketSize.label': 'Dimensione del mercato',
  'crypto.marketSize.top100': 'Top 100 Coins',
  'crypto.marketSize.top250': 'Top 250 Coins',
  'crypto.marketSize.top500': 'Top 500 Coins',
  'crypto.marketSize.top1000': 'Top 1.000 Coins',
  'crypto.marketSize.top2500': 'Top 2.500 Coins',
  'crypto.pageSize.label': 'Coins per pagina',
  'crypto.pageSize.coinsPerPage': 'coins per pagina',
  'crypto.pagination.showing': 'Visualizzazione',
  'crypto.pagination.of': 'di',
  'crypto.pagination.previous': 'Pagina precedente',
  'crypto.pagination.next': 'Pagina successiva',
  'crypto.empty.title': 'Nessun dato disponibile',
  'crypto.empty.subtitle': 'Fai clic su "Carica dati" per visualizzare i prezzi attuali delle criptovalute.',
  'crypto.loadData': 'Carica dati',
  'crypto.clickForDetails': 'Clicca per i dettagli',
  'crypto.table.volume': 'Volume 24h',
  'crypto.table.supply': 'Offerta',
  'crypto.table.chart': 'Grafico 7g',
  'crypto.search.placeholder': 'Cerca crypto...',
  'crypto.noResults': 'Nessun risultato trovato',
  'crypto.viewDetails': 'Vedi dettagli',

  // Angular Summary Component
  'angular.header.title': 'Angular v20 Best Practices e Riepilogo',
  'angular.header.subtitle': 'Sviluppo web moderno con Angular 20 - Signals, Standalone Components e altro',
  'angular.backToHome': 'Torna alla home',
  'angular.sections.coreFeatures': 'Funzionalità Principali',
  'angular.sections.bestPractices': 'Best Practices',
  'angular.sections.technologies': 'Tecnologie Utilizzate',
  'angular.sections.examples': 'Esempi di Codice',
  'angular.sections.advanced': 'Argomenti Avanzati',
  'angular.sections.architecture': 'Pattern Architetturali',
  'angular.sections.tools': 'CLI & DevTools',
  'angular.features.signals.title': 'Signals',
  'angular.features.signals.description': 'Gestione dello stato reattiva con signal(), computed() ed effect() per prestazioni ottimali',
  'angular.features.standalone.title': 'Componenti Standalone',
  'angular.features.standalone.description': 'Architettura senza moduli - i componenti sono standalone per impostazione predefinita',
  'angular.features.inject.title': 'Funzione inject()',
  'angular.features.inject.description': 'Dependency injection con inject() invece dell\'iniezione tramite costruttore',
  'angular.features.controlFlow.title': 'Control Flow',
  'angular.features.controlFlow.description': 'Sintassi nativa @if, @for, @switch invece di direttive strutturali',
  'angular.features.deferrable.title': 'Viste Differibili (@defer)',
  'angular.features.deferrable.description': 'Caricamento differito dei template con blocchi @defer, @placeholder, @loading e @error',
  'angular.features.inputOutput.title': 'Funzioni input() & output()',
  'angular.features.inputOutput.description': 'Input e Output del componente basati sui signal sostituiscono i decorator @Input() e @Output()',
  'angular.features.viewQueries.title': 'viewChild() & viewChildren()',
  'angular.features.viewQueries.description': 'Query di vista basate sui signal per accesso type-safe a componenti figlio ed elementi DOM',
  'angular.features.model.title': 'model() per Binding Bidirezionale',
  'angular.features.model.description': 'Binding dati bidirezionale semplificato con WritableSignal per comunicazione bidirezionale',
  'angular.features.onPush.title': 'Rilevamento OnPush',
  'angular.features.onPush.description': 'Prestazioni ottimizzate tramite ChangeDetectionStrategy.OnPush',
  'angular.features.httpClient.title': 'HttpClient con Signals',
  'angular.features.httpClient.description': 'Comunicazione HTTP moderna con provideHttpClient(withFetch())',
  'angular.features.resource.title': 'API Resource (Sperimentale)',
  'angular.features.resource.description': 'Richieste HTTP dichiarative con gestione automatica dello stato di caricamento e degli errori',
  'angular.features.typedForms.title': 'Form Reattivi Tipizzati',
  'angular.features.typedForms.description': 'Form completamente tipizzati con FormControl<T>, FormGroup<T> e FormArray<T>',
  'angular.features.router.title': 'Router Standalone',
  'angular.features.router.description': 'Routing funzionale con provideRouter(), Guard, Resolver e Lazy Loading',
  'angular.features.material.title': 'Material Design 3',
  'angular.features.material.description': 'Componenti Angular Material con tematizzazione Material Design 3 e Accessibilità',
  'angular.features.devtools.title': 'Angular DevTools',
  'angular.features.devtools.description': 'Estensione browser per ispezione componenti, profilazione e debug della dependency injection',
  'angular.features.vite.title': 'Vite & ESBuild',
  'angular.features.vite.description': 'Tempi di build ultra-rapidi con server di sviluppo Vite e ESBuild per build di produzione',
  'angular.bestPractices.components.title': 'Componenti',
  'angular.bestPractices.components.item1': 'Componenti piccoli e mirati con responsabilità singola',
  'angular.bestPractices.components.item2': 'Usare le funzioni input() e output() invece dei decorator',
  'angular.bestPractices.components.item3': 'Preferire template inline per componenti piccoli',
  'angular.bestPractices.components.item4': 'Rilevamento delle modifiche OnPush per prestazioni ottimali',
  'angular.bestPractices.components.item5': 'Usare i binding class e style invece di ngClass/ngStyle',
  'angular.bestPractices.components.item6': 'Implementare i lifecycle hook (OnInit, OnDestroy, ecc.)',
  'angular.bestPractices.components.item7': 'Protected per membri solo template, private per logica interna',
  'angular.bestPractices.components.item8': 'Estrarre la logica template complessa in signals computed()',
  'angular.bestPractices.state.title': 'Gestione dello Stato',
  'angular.bestPractices.state.item1': 'Usare signals per lo stato locale del componente',
  'angular.bestPractices.state.item2': 'Usare computed() per lo stato derivato',
  'angular.bestPractices.state.item3': 'Mantenere le trasformazioni di stato pure e prevedibili',
  'angular.bestPractices.state.item4': 'Usare update() o set(), mai mutate()',
  'angular.bestPractices.state.item5': 'Usare effect() solo per effetti collaterali, non aggiornamenti di stato',
  'angular.bestPractices.state.item6': 'Usare untracked() per evitare dipendenze circolari',
  'angular.bestPractices.templates.title': 'Templates',
  'angular.bestPractices.templates.item1': 'Usare il control flow nativo (@if, @for, @switch)',
  'angular.bestPractices.templates.item2': 'Mantenere i template semplici, evitare logica complessa',
  'angular.bestPractices.templates.item3': 'Usare il pipe async per gli observables',
  'angular.bestPractices.templates.item4': 'Usare trackBy con @for per rendering di liste efficiente',
  'angular.bestPractices.templates.item5': 'Usare @defer per lazy loading di componenti pesanti',
  'angular.bestPractices.services.title': 'Services',
  'angular.bestPractices.services.item1': 'Progettare i servizi con responsabilità singola',
  'angular.bestPractices.services.item2': 'Usare providedIn: "root" per i servizi singleton',
  'angular.bestPractices.services.item3': 'Usare la funzione inject() invece dell\'iniezione tramite costruttore',
  'angular.bestPractices.services.item4': 'Esporre lo stato readonly con signals privati per le mutazioni',
  'angular.bestPractices.services.item5': 'Separare la logica di servizio dalla logica di presentazione',
  'angular.bestPractices.performance.title': 'Prestazioni',
  'angular.bestPractices.performance.item1': 'Usare sistematicamente il rilevamento delle modifiche OnPush',
  'angular.bestPractices.performance.item2': 'Implementare il lazy loading per le route delle funzionalità',
  'angular.bestPractices.performance.item3': 'Usare NgOptimizedImage per le immagini statiche',
  'angular.bestPractices.performance.item4': 'Usare trackBy con @for per un rendering ottimale',
  'angular.bestPractices.performance.item5': 'Usare @defer per caricamento componenti on-demand',
  'angular.bestPractices.performance.item6': 'Preferire pipe pure (predefinite), impure solo se necessario',
  'angular.bestPractices.performance.item7': 'Usare Web Workers per calcoli intensivi della CPU',
  'angular.bestPractices.typescript.title': 'TypeScript',
  'angular.bestPractices.typescript.item1': 'Controllo di tipo rigoroso attivato',
  'angular.bestPractices.typescript.item2': 'Usare l\'inferenza di tipo quando è ovvio',
  'angular.bestPractices.typescript.item3': 'Evitare any, usare unknown in caso di incertezza',
  'angular.bestPractices.typescript.item4': 'Usare readonly per proprietà che non cambiano',
  'angular.bestPractices.typescript.item5': 'Usare const per tutte le variabili che non vengono riassegnate',
  'angular.bestPractices.typescript.item6': 'Tipi di ritorno espliciti per metodi API pubblici',
  'angular.bestPractices.accessibility.title': 'Accessibilità (a11y)',
  'angular.bestPractices.accessibility.item1': 'Usare elementi HTML semantici',
  'angular.bestPractices.accessibility.item2': 'Aggiungere etichette ARIA per contenuti dinamici',
  'angular.bestPractices.accessibility.item3': 'Navigazione da tastiera per tutti gli elementi interattivi',
  'angular.bestPractices.accessibility.item4': 'Contrasti di colore sufficienti (WCAG 2.1 AA)',
  'angular.bestPractices.accessibility.item5': 'Gestione del focus per dialoghi modali e route',
  'angular.bestPractices.testing.title': 'Testing',
  'angular.bestPractices.testing.item1': 'Scrivere unit test per tutta la logica di business',
  'angular.bestPractices.testing.item2': 'Usare TestBed per test di componenti con dependency injection',
  'angular.bestPractices.testing.item3': 'Testare signals con TestBed.inject() e fixture.detectChanges()',
  'angular.bestPractices.testing.item4': 'Mockare i servizi per test di componenti isolati',
  'angular.bestPractices.testing.item5': 'Test E2E per percorsi utente critici (Cypress/Playwright)',
  'angular.bestPractices.errorHandling.title': 'Gestione degli Errori',
  'angular.bestPractices.errorHandling.item1': 'Implementare un gestore di errori globale per errori imprevisti',
  'angular.bestPractices.errorHandling.item2': 'Usare un interceptor HTTP per gestione centralizzata errori API',
  'angular.bestPractices.errorHandling.item3': 'Usare catchError() per gestione errori observable',
  'angular.bestPractices.errorHandling.item4': 'Mostrare messaggi di errore user-friendly con contesto',
  'angular.bestPractices.security.title': 'Sicurezza',
  'angular.bestPractices.security.item1': 'Usare la sanitizzazione per input utente (protezione XSS)',
  'angular.bestPractices.security.item2': 'Usare token CSRF per richieste che modificano lo stato',
  'angular.bestPractices.security.item3': 'Usare un interceptor HTTP per header di autorizzazione',
  'angular.bestPractices.security.item4': 'Non memorizzare mai dati sensibili in localStorage',
  'angular.bestPractices.security.item5': 'Configurare la Content Security Policy (CSP)',
  'angular.bestPractices.codeOrganization.title': 'Organizzazione del Codice',
  'angular.bestPractices.codeOrganization.item1': 'Organizzare per funzionalità, non per tipi di file',
  'angular.bestPractices.codeOrganization.item2': 'Modulo Shared/Common per componenti riutilizzabili',
  'angular.bestPractices.codeOrganization.item3': 'Modulo Core per servizi singleton e guards',
  'angular.bestPractices.codeOrganization.item4': 'Un concetto per file (componente, servizio, ecc.)',
  'angular.bestPractices.codeOrganization.item5': 'File index (index.ts) per export di API pubbliche',
  'angular.bestPractices.dependency.title': 'Gestione delle Dipendenze',
  'angular.bestPractices.dependency.item1': 'Aggiornare le dipendenze regolarmente (ng update)',
  'angular.bestPractices.dependency.item2': 'Prestare attenzione alle peer dependencies e compatibilità',
  'angular.bestPractices.dependency.item3': 'Monitorare la dimensione del bundle con source-map-explorer',
  'angular.bestPractices.dependency.item4': 'Usare provider tree-shakeable (providedIn)',
  'angular.bestPractices.buildDeploy.title': 'Build & Deployment',
  'angular.bestPractices.buildDeploy.item1': 'Build di produzione con --configuration=production',
  'angular.bestPractices.buildDeploy.item2': 'Compilazione AOT per migliori prestazioni',
  'angular.bestPractices.buildDeploy.item3': 'Usare configurazioni specifiche per ambiente',
  'angular.bestPractices.buildDeploy.item4': 'Abilitare source maps solo in sviluppo',
  'angular.bestPractices.buildDeploy.item5': 'Pipeline CI/CD per test e deployment automatizzati',
  'angular.examples.signals.title': 'Esempio Signals',
  'angular.examples.signals.subtitle': 'Gestione dello Stato Reattiva',
  'angular.examples.signals.description': 'I signals offrono un modo semplice e performante per gestire lo stato reattivo.',
  'angular.examples.inject.title': 'Dependency Injection',
  'angular.examples.inject.subtitle': 'DI moderna con inject()',
  'angular.examples.inject.description': 'La funzione inject() consente una dependency injection più pulita e leggibile.',
  'angular.examples.controlFlow.title': 'Control Flow',
  'angular.examples.controlFlow.subtitle': 'Sintassi Template Nativa',
  'angular.examples.controlFlow.description': 'La sintassi nativa @if, @else è più intuitiva e performante di *ngIf.',
  'angular.actions.title': 'Pronto per di più?',
  'angular.actions.description': 'Esplora più funzionalità e progetti sul mio portfolio o scopri di più su Angular.',
  'angular.actions.backHome': 'Torna alla home',
  'angular.actions.learnMore': 'Scopri di Più su Angular',

  // Detailed Code Examples
  'angular.sections.detailedExamples': 'Esempi di Codice Dettagliati',
  'angular.sections.detailedExamplesDesc': 'Implementazioni pratiche dei pattern Angular v20 moderni',
  'angular.codeExamples.signals.title': 'API Signals',
  'angular.codeExamples.signals.subtitle': 'Gestione dello Stato Reattiva',
  'angular.codeExamples.signals.description': 'I Signals offrono un\'API semplice e performante per lo stato reattivo. Con signal(), computed() ed effect() i flussi di dati complessi possono essere implementati elegantemente.',
  'angular.codeExamples.component.title': 'Componente Moderno',
  'angular.codeExamples.component.subtitle': 'input(), output() & model()',
  'angular.codeExamples.component.description': 'Le nuove API basate su signals per Inputs, Outputs e Two-Way Binding sostituiscono i decorator Property/Event.',
  'angular.codeExamples.controlFlow.title': 'Sintassi Control Flow',
  'angular.codeExamples.controlFlow.subtitle': '@if, @for, @switch',
  'angular.codeExamples.controlFlow.description': 'Sintassi di template nativa per condizioni e cicli - più performante e intuitiva delle direttive strutturali.',
  'angular.codeExamples.service.title': 'Service con Signals',
  'angular.codeExamples.service.subtitle': 'Pattern di Gestione dello Stato',
  'angular.codeExamples.service.description': 'I services usano Signals per la gestione dello stato con stato esposto readonly e mutazioni private.',
  'angular.codeExamples.routing.title': 'Routing Lazy Loading',
  'angular.codeExamples.routing.subtitle': 'loadComponent & loadChildren',
  'angular.codeExamples.routing.description': 'Gli Standalone Components permettono un semplice lazy loading senza NgModules.',
  'angular.codeExamples.forms.title': 'Reactive Forms',
  'angular.codeExamples.forms.subtitle': 'FormControl con Signals',
  'angular.codeExamples.forms.description': 'Reactive Forms con toSignal() per un\'integrazione ottimale di RxJS e Signals.',
  'angular.codeExamples.rxjs.title': 'RxJS Interop',
  'angular.codeExamples.rxjs.subtitle': 'toSignal & toObservable',
  'angular.codeExamples.rxjs.description': 'Integrazione trasparente tra Signals e Observables con le funzioni di interop.',
  'angular.codeExamples.guards.title': 'Guards Funzionali',
  'angular.codeExamples.guards.subtitle': 'Protezione delle Route',
  'angular.codeExamples.guards.description': 'Guards moderni come funzioni invece di classi - più semplice e testabile.',
  'angular.codeExamples.pipes.title': 'Pipes Personalizzati',
  'angular.codeExamples.pipes.subtitle': 'Transform & Pure',
  'angular.codeExamples.pipes.description': 'Pure Pipes per trasformazione dati efficiente con caching automatico.',
  'angular.codeExamples.interceptor.title': 'HTTP Interceptor',
  'angular.codeExamples.interceptor.subtitle': 'Interceptor Funzionali',
  'angular.codeExamples.interceptor.description': 'Interceptor funzionali moderni con inject() per auth e gestione errori.',
  'angular.codeExamples.directive.title': 'Directive Personalizzate',
  'angular.codeExamples.directive.subtitle': 'Basate su Signals',
  'angular.codeExamples.directive.description': 'Directive con signal inputs e host bindings senza decorator.',
  'angular.codeExamples.deferrable.title': 'Viste Differibili',
  'angular.codeExamples.deferrable.subtitle': 'Sintassi @defer',
  'angular.codeExamples.deferrable.description': 'Caricamento differito di template con blocchi @defer, @placeholder e @loading.',
  'angular.codeExamples.viewChild.title': 'View Queries',
  'angular.codeExamples.viewChild.subtitle': 'viewChild & viewChildren',
  'angular.codeExamples.viewChild.description': 'Query di vista basate su signals per accesso type-safe a componenti ed elementi.',
  'angular.codeExamples.hostBinding.title': 'Host Bindings',
  'angular.codeExamples.hostBinding.subtitle': 'Host del Componente',
  'angular.codeExamples.hostBinding.description': 'Host bindings dichiarativi per class, style, attributi ed eventi nell\'oggetto host.',
  'angular.codeExamples.contentChild.title': 'Proiezione di Contenuto',
  'angular.codeExamples.contentChild.subtitle': 'Query contentChild',
  'angular.codeExamples.contentChild.description': 'Query di contenuto con contentChild e contentChildren per accesso ng-content.',
  'angular.codeExamples.testing.title': 'Test dei Componenti',
  'angular.codeExamples.testing.subtitle': 'Jasmine & TestBed',
  'angular.codeExamples.testing.description': 'Test unitari per signals, valori computed e interazioni dei componenti.',
  'angular.codeExamples.resource.title': 'API Resource',
  'angular.codeExamples.resource.subtitle': 'Richieste HTTP Dichiarative',
  'angular.codeExamples.resource.description': 'API Resource sperimentale per gestione automatica dello stato di caricamento, errori e dati.',
  'angular.codeExamples.animations.title': 'Animazioni',
  'angular.codeExamples.animations.subtitle': 'Angular Animations',
  'angular.codeExamples.animations.description': 'Animazioni dichiarative con trigger, stati, transizioni e sequenze complesse.',
  'angular.codeExamples.stateManagement.title': 'Gestione dello Stato',
  'angular.codeExamples.stateManagement.subtitle': 'Store Centrale dell\'App',
  'angular.codeExamples.stateManagement.description': 'Store centrale basato su signals con stato computed e azioni per gestione dello stato globale.',
  'angular.codeExamples.httpSignals.title': 'HTTP con Signals',
  'angular.codeExamples.httpSignals.subtitle': 'toSignal & toObservable',
  'angular.codeExamples.httpSignals.description': 'Comunicazione HTTP reattiva con toSignal per conversione da Observable a Signal.',
  'angular.codeExamples.performance.title': 'Ottimizzazione delle Prestazioni',
  'angular.codeExamples.performance.subtitle': 'OnPush & TrackBy',
  'angular.codeExamples.performance.description': 'Best practices per prestazioni ottimali: OnPush, TrackBy, Virtual Scrolling e Lazy Loading.',

  // Advanced Topics
  'angular.advanced.routing.title': 'Routing & Navigazione',
  'angular.advanced.routing.description': 'Potente sistema di routing con guards, resolvers e lazy loading',
  'angular.advanced.routing.topic1': 'Functional Route Guards (canActivate, canDeactivate)',
  'angular.advanced.routing.topic2': 'Route Resolvers per precaricamento dati',
  'angular.advanced.routing.topic3': 'Lazy Loading con loadComponent() e loadChildren()',
  'angular.advanced.routing.topic4': 'Child Routes e layout annidati',
  'angular.advanced.routing.topic5': 'Route Parameters e Query Parameters',
  'angular.advanced.routing.topic6': 'Strategie di precaricamento per prestazioni ottimali',
  'angular.advanced.forms.title': 'Reactive Forms',
  'angular.advanced.forms.description': 'Gestione di form type-safe con validazione e controlli dinamici',
  'angular.advanced.forms.topic1': 'Typed Reactive Forms con FormControl<T>',
  'angular.advanced.forms.topic2': 'Validatori personalizzati (sync & async)',
  'angular.advanced.forms.topic3': 'Form dinamici con FormBuilder e FormArray',
  'angular.advanced.forms.topic4': 'Gestione stato con valueChanges e statusChanges',
  'angular.advanced.forms.topic5': 'Custom Form Controls con ControlValueAccessor',
  'angular.advanced.forms.topic6': 'Gestione e visualizzazione errori di validazione',
  'angular.advanced.rxjs.title': 'RxJS Patterns & Operatori',
  'angular.advanced.rxjs.description': 'Programmazione reattiva con Observables, Subjects e Operatori',
  'angular.advanced.rxjs.topic1': 'toSignal() e toObservable() per interop Signal/Observable',
  'angular.advanced.rxjs.topic2': 'Operatori di ordine superiore (switchMap, mergeMap, concatMap)',
  'angular.advanced.rxjs.topic3': 'Gestione errori con catchError e retry',
  'angular.advanced.rxjs.topic4': 'Multicasting con Subject, BehaviorSubject, ReplaySubject',
  'angular.advanced.rxjs.topic5': 'Operatori di combinazione (combineLatest, forkJoin, zip)',
  'angular.advanced.rxjs.topic6': 'Prevenzione memory leak e pattern Unsubscribe',
  'angular.advanced.changeDetection.title': 'Change Detection approfondita',
  'angular.advanced.changeDetection.description': 'Ottimizzazione Change Detection per massime prestazioni',
  'angular.advanced.changeDetection.topic1': 'Strategie Default vs OnPush Change Detection',
  'angular.advanced.changeDetection.topic2': 'Zone.js e NgZone per aggiornamenti asincroni',
  'angular.advanced.changeDetection.topic3': 'Change Detection manuale con ChangeDetectorRef',
  'angular.advanced.changeDetection.topic4': 'Signals e Change Detection senza Zone',
  'angular.advanced.changeDetection.topic5': 'Profilazione prestazioni con Angular DevTools',
  'angular.advanced.animations.title': 'API Animations',
  'angular.advanced.animations.description': 'Animazioni dichiarative con Angular Animations',
  'angular.advanced.animations.topic1': 'Animazioni basate su stati con trigger, state, transition',
  'angular.advanced.animations.topic2': 'Animazioni Enter/Leave per @if e @for',
  'angular.advanced.animations.topic3': 'Keyframe Animations e curve di animazione',
  'angular.advanced.animations.topic4': 'Callbacks ed eventi di animazione',
  'angular.advanced.animations.topic5': 'Funzioni di animazione riutilizzabili',
  'angular.advanced.testing.title': 'Strategie di testing',
  'angular.advanced.testing.description': 'Testing completo con Jasmine, Karma e Playwright',
  'angular.advanced.testing.topic1': 'Test componenti con TestBed e ComponentFixture',
  'angular.advanced.testing.topic2': 'Test Signals con TestBed.inject() e runInInjectionContext',
  'angular.advanced.testing.topic3': 'Mocking servizi e pattern Spy',
  'angular.advanced.testing.topic4': 'HttpClientTestingModule per test HTTP',
  'angular.advanced.testing.topic5': 'Test E2E con Playwright o Cypress',
  'angular.advanced.testing.topic6': 'Code Coverage e report di test',
  'angular.advanced.ssr.title': 'Server-Side Rendering & Hydration',
  'angular.advanced.ssr.description': 'SSR per migliori prestazioni, SEO e Core Web Vitals',
  'angular.advanced.ssr.topic1': 'Setup e configurazione Angular Universal',
  'angular.advanced.ssr.topic2': 'Hydration non-distruttiva per transizione client fluida',
  'angular.advanced.ssr.topic3': 'Static Site Generation (SSG) con Prerendering',
  'angular.advanced.ssr.topic4': '@defer per Hydration progressiva',
  'angular.advanced.ssr.topic5': 'Transfer State per trasferimento dati server-client',
  'angular.advanced.ssr.topic6': 'Codice specifico piattaforma con isPlatformBrowser/Server',
  'angular.advanced.i18n.title': 'Internazionalizzazione (i18n)',
  'angular.advanced.i18n.description': 'Supporto multi-lingua e localizzazione',
  'angular.advanced.i18n.topic1': 'Servizio traduzione personalizzato con Signals',
  'angular.advanced.i18n.topic2': '@angular/localize per traduzione Build-Time',
  'angular.advanced.i18n.topic3': 'Formato ICU per plurali e Select',
  'angular.advanced.i18n.topic4': 'Cambio lingua Runtime',
  'angular.advanced.i18n.topic5': 'Pipes Date, Number, Currency con Locale',
  'angular.advanced.security.title': 'Best practice di sicurezza',
  'angular.advanced.security.description': 'Funzionalità di sicurezza integrate e best practices',
  'angular.advanced.security.topic1': 'DomSanitizer per protezione XSS con HTML dinamico',
  'angular.advanced.security.topic2': 'Protezione CSRF con HttpClient',
  'angular.advanced.security.topic3': 'Configurazione Content Security Policy (CSP)',
  'angular.advanced.security.topic4': 'Supporto API Trusted Types',
  'angular.advanced.security.topic5': 'Autenticazione sicura con JWT e HTTP Interceptors',
  'angular.advanced.security.topic6': 'Applicazione HTTPS e Cookies sicuri',
  'angular.advanced.directives.title': 'Directives avanzate',
  'angular.advanced.directives.description': 'Directives strutturali e di attributo per template avanzati',
  'angular.advanced.directives.topic1': 'Directives strutturali personalizzate con ng-template',
  'angular.advanced.directives.topic2': 'Directives attributo con Signal Inputs',
  'angular.advanced.directives.topic3': 'Host Bindings e Host Listeners nell\'oggetto host',
  'angular.advanced.directives.topic4': 'API composizione Directive',
  'angular.advanced.directives.topic5': 'Renderer2 per manipolazione DOM platform-safe',
  'angular.advanced.pipes.title': 'Pipes personalizzati',
  'angular.advanced.pipes.description': 'Pipes puri e impuri per trasformazione dati',
  'angular.advanced.pipes.topic1': 'Pipes puri con cache automatico',
  'angular.advanced.pipes.topic2': 'Pipes impuri per dati dinamici',
  'angular.advanced.pipes.topic3': 'Async Pipe per gestione Observable/Promise',
  'angular.advanced.pipes.topic4': 'Pipes parametrizzati',
  'angular.advanced.pipes.topic5': 'Considerazioni prestazioni e best practices',
  'angular.advanced.httpInterceptors.title': 'HTTP Interceptors',
  'angular.advanced.httpInterceptors.description': 'Intercettazione Request/Response per auth, logging e gestione errori',
  'angular.advanced.httpInterceptors.topic1': 'Interceptors funzionali con HttpInterceptorFn',
  'angular.advanced.httpInterceptors.topic2': 'Interceptor autenticazione per JWT Tokens',
  'angular.advanced.httpInterceptors.topic3': 'Gestione errori e logica retry',
  'angular.advanced.httpInterceptors.topic4': 'Logging Request/Response',
  'angular.advanced.httpInterceptors.topic5': 'Interceptors multipli e ordine esecuzione',
  'angular.advanced.stateManagement.title': 'Pattern gestione stato',
  'angular.advanced.stateManagement.description': 'Diversi approcci per gestione stato applicazione',
  'angular.advanced.stateManagement.topic1': 'Gestione stato basata su Signals con Services',
  'angular.advanced.stateManagement.topic2': 'NgRx Store per gestione stato complessa',
  'angular.advanced.stateManagement.topic3': 'NGRX Signal Store (nuova API basata su Signals)',
  'angular.advanced.stateManagement.topic4': 'Component Store per stato feature locale',
  'angular.advanced.stateManagement.topic5': 'Gestione stato basata su RxJS con BehaviorSubject',
  'angular.advanced.moduleFederation.title': 'Module Federation',
  'angular.advanced.moduleFederation.description': 'Architettura Micro-Frontend con Webpack Module Federation',
  'angular.advanced.moduleFederation.topic1': 'Setup con @angular-architects/module-federation',
  'angular.advanced.moduleFederation.topic2': 'Caricamento moduli remoti al runtime',
  'angular.advanced.moduleFederation.topic3': 'Gestione dipendenze condivise',
  'angular.advanced.moduleFederation.topic4': 'Pattern comunicazione Micro-Frontend',
  'angular.advanced.pwa.title': 'Progressive Web Apps (PWA)',
  'angular.advanced.pwa.description': 'Esperienza app-like con Service Workers e supporto offline',
  'angular.advanced.pwa.topic1': 'Setup e configurazione @angular/pwa',
  'angular.advanced.pwa.topic2': 'Strategie cache Service Worker',
  'angular.advanced.pwa.topic3': 'Supporto offline e Background Sync',
  'angular.advanced.pwa.topic4': 'Notifiche Push',
  'angular.advanced.pwa.topic5': 'Manifesto app e prompt installazione',
  'angular.architecture.smartDumb.title': 'Smart & Dumb Components',
  'angular.architecture.smartDumb.description': 'Separazione dei componenti container (smart) e di presentazione (dumb) per una migliore manutenibilità',
  'angular.architecture.facade.title': 'Pattern Facade',
  'angular.architecture.facade.description': 'API semplificata per logica complessa di gestione dello stato',
  'angular.architecture.facade.detailTitle': 'Facade Pattern',
  'angular.architecture.facade.explanation': 'Il pattern Facade fornisce un\'interfaccia unificata e semplificata su più servizi complessi, centralizzando la logica di presentation e lo stato.',
  'angular.architecture.facade.benefit1': 'Riduce la complessità nei componenti',
  'angular.architecture.facade.benefit2': 'Punto centrale per la logica di feature',
  'angular.architecture.facade.benefit3': 'Facilita il refactoring grazie all\'incapsulamento',
  'angular.architecture.facade.benefit4': 'Migliore testabilità',
  'angular.architecture.facade.useCase1': 'Orchestrazione di più servizi per una feature',
  'angular.architecture.facade.useCase2': 'Coordinamento di chiamate API',
  'angular.architecture.facade.useCase3': 'Esposizione di Observable condivisi per l\'UI',
  'angular.architecture.facade.implementation1': 'Il servizio facade inietta i servizi necessari',
  'angular.architecture.facade.implementation2': 'Espone Observable per lo state reattivo',
  'angular.architecture.facade.implementation3': 'Fornisce metodi action per le operazioni',
  'angular.architecture.facade.implementation4': 'Gestisce centralmente errori e notifiche',
  'angular.architecture.facade.challenge1': 'Rischio di "God Object" se progettato male',
  'angular.architecture.facade.challenge2': 'Può nascondere la complessità nel posto sbagliato',

  'angular.architecture.module.title': 'Moduli di Funzionalità',
  'angular.architecture.module.description': 'Organizzazione delle funzionalità in moduli riutilizzabili',
  'angular.architecture.module.detailTitle': 'Feature Modules',
  'angular.architecture.module.explanation': 'Raggruppare componenti, servizi e rotte per feature migliora modularità, riusabilità e produce bundle più piccoli.',
  'angular.architecture.module.benefit1': 'Chiarezza nelle responsabilità',
  'angular.architecture.module.benefit2': 'Facilita lazy loading e team indipendenti',
  'angular.architecture.module.benefit3': 'Migliore riusabilità',
  'angular.architecture.module.benefit4': 'Controllo delle dipendenze a livello di modulo',
  'angular.architecture.module.useCase1': 'Isolare una feature critica',
  'angular.architecture.module.useCase2': 'Condividere componenti e servizi tra feature',
  'angular.architecture.module.useCase3': 'Organizzare rotte e risorse specifiche',
  'angular.architecture.module.implementation1': 'Creare barrel-exports (index.ts) per l\'API del modulo',
  'angular.architecture.module.implementation2': 'Usare loadChildren o loadComponent per il lazy loading',
  'angular.architecture.module.implementation3': 'Fornire servizi a livello di modulo se necessario',
  'angular.architecture.module.implementation4': 'Documentare l\'API pubblica del modulo',
  'angular.architecture.module.challenge1': 'Troppi moduli piccoli aumentano la complessità',
  'angular.architecture.module.challenge2': 'Separazione scorretta può creare dipendenze cicliche',

  'angular.architecture.lazy.title': 'Lazy Loading',
  'angular.architecture.lazy.description': 'Caricamento on-demand delle funzionalità per caricamenti iniziali più veloci',
  'angular.architecture.lazy.detailTitle': 'Lazy Loading / Dynamic Loading',
  'angular.architecture.lazy.explanation': 'Il lazy loading permette di caricare il codice di una feature solo quando necessario, riducendo il tempo di caricamento iniziale.',
  'angular.architecture.lazy.benefit1': 'Riduzione del bundle iniziale',
  'angular.architecture.lazy.benefit2': 'Miglior tempo di avvio',
  'angular.architecture.lazy.benefit3': 'Caricamento on-demand per feature poco usate',
  'angular.architecture.lazy.benefit4': 'Migliore esperienza utente',
  'angular.architecture.lazy.useCase1': 'Sezioni admin pesanti',
  'angular.architecture.lazy.useCase2': 'Funzionalità premium opzionali',
  'angular.architecture.lazy.useCase3': 'Plugin o micro-frontends',
  'angular.architecture.lazy.implementation1': 'Usare loadChildren o loadComponent per caricare on-demand',
  'angular.architecture.lazy.implementation2': 'Definire strategie di preloading quando necessario',
  'angular.architecture.lazy.implementation3': 'Gestire lo stato di caricamento e fallback UI',
  'angular.architecture.lazy.implementation4': 'Testare i percorsi di inizializzazione e errori di caricamento',
  'angular.architecture.lazy.challenge1': 'Complessità delle rotte dinamiche',
  'angular.architecture.lazy.challenge2': 'Problemi di condivisione dipendenze tra remotes',

  'angular.architecture.repository.title': 'Pattern Repository',
  'angular.architecture.repository.description': 'Livello di accesso ai dati centralizzato per comunicazione API e caching',
  'angular.architecture.repository.detailTitle': 'Repository Pattern',
  'angular.architecture.repository.explanation': 'Il repository centralizza l\'accesso ai dati, fornendo un\'astrazione sulle sorgenti di dati e meccanismi di caching.',
  'angular.architecture.repository.benefit1': 'Isolamento della sorgente dati',
  'angular.architecture.repository.benefit2': 'Riutilizzabilità dei metodi di accesso',
  'angular.architecture.repository.benefit3': 'Facilita il mocking per i test',
  'angular.architecture.repository.benefit4': 'Centralizza strategie di retry/caching',
  'angular.architecture.repository.useCase1': 'Astrazione di API REST/GraphQL',
  'angular.architecture.repository.useCase2': 'Cache locale per dati frequentemente usati',
  'angular.architecture.repository.useCase3': 'Coordinazione di chiamate multiple a diverse sorgenti',
  'angular.architecture.repository.implementation1': 'Definire un\'interfaccia Repository<T>',
  'angular.architecture.repository.implementation2': 'Implementare classi specifiche per risorsa',
  'angular.architecture.repository.implementation3': 'Usare operatori RxJS per retry e caching',
  'angular.architecture.repository.implementation4': 'Gestire errori e tradurre gli errori API',
  'angular.architecture.repository.challenge1': 'Sovraccarico se troppe responsabilità sono collocate qui',
  'angular.architecture.repository.challenge2': 'Astrazione incompleta che porta a leakage di dettagli',

  'angular.architecture.observer.title': 'Pattern Observer',
  'angular.architecture.observer.description': 'Comunicazione basata su eventi con RxJS Observables e Subjects',
  'angular.architecture.observer.detailTitle': 'Observer / Pub-Sub',
  'angular.architecture.observer.explanation': 'Il pattern Observer permette componenti poco accoppiati che reagiscono a eventi pubblicati tramite Observable o Subject.',
  'angular.architecture.observer.benefit1': 'Decoupling tra emitter e consumer',
  'angular.architecture.observer.benefit2': 'Facilita l\'estensione con nuovi handler',
  'angular.architecture.observer.benefit3': 'Supporta comunicazione asincrona',
  'angular.architecture.observer.benefit4': 'Permette broadcast di eventi a molti subscriber',
  'angular.architecture.observer.useCase1': 'Notifiche e toasts',
  'angular.architecture.observer.useCase2': 'Bus di eventi tra micro-frontends',
  'angular.architecture.observer.useCase3': 'Aggiornamenti di stato via Subjects/BehaviorSubject',
  'angular.architecture.observer.implementation1': 'Usare Subject/BehaviorSubject/ReplaySubject a seconda del caso',
  'angular.architecture.observer.implementation2': 'Unsubscribe corretto per evitare memory leaks',
  'angular.architecture.observer.implementation3': 'Trasformare eventi con operatori RxJS',
  'angular.architecture.observer.implementation4': 'Documentare i tipi di eventi pubblicati',
  'angular.architecture.observer.challenge1': 'Gestione delle subscription e memory leaks',
  'angular.architecture.observer.challenge2': 'Difficoltà a tracciare l\'origine degli eventi',
  'angular.architecture.singleton.title': 'Pattern Singleton',
  'angular.architecture.singleton.description': 'Servizi condivisi con providedIn: "root" per stato a livello di applicazione',
  'angular.architecture.singleton.detailTitle': 'Singleton Pattern',
  'angular.architecture.singleton.explanation': 'Il singleton fornisce un\'istanza unica condivisa di un servizio o configurazione in tutta l\'applicazione.',
  'angular.architecture.singleton.benefit1': 'Istanza unica accessibile globalmente',
  'angular.architecture.singleton.benefit2': 'Facilita la condivisione di cache e risorse',
  'angular.architecture.singleton.benefit3': 'Semplicità di accesso',
  'angular.architecture.singleton.benefit4': 'Utile per auth e config',
  'angular.architecture.singleton.useCase1': 'Service di autenticazione',
  'angular.architecture.singleton.useCase2': 'Service di configurazione',
  'angular.architecture.singleton.useCase3': 'Cache condivisa in memoria',
  'angular.architecture.singleton.implementation1': 'Fornire con providedIn: "root"',
  'angular.architecture.singleton.implementation2': 'Evitare stato mutabile non sincronizzato',
  'angular.architecture.singleton.implementation3': 'Documentare l\'API pubblica',
  'angular.architecture.singleton.implementation4': 'Preferire injection controllata',
  'angular.architecture.singleton.challenge1': 'Accoppiamento globale aumentato',
  'angular.architecture.singleton.challenge2': 'Difficoltà di test senza isolamento',

  'angular.architecture.decorator.title': 'Pattern Decorator',
  'angular.architecture.decorator.description': 'Estensione della funzionalità con @Component, @Injectable e decorator personalizzati',
  'angular.architecture.decorator.detailTitle': 'Decorator Pattern',
  'angular.architecture.decorator.explanation': 'I decorator permettono di aggiungere comportamenti a classi, metodi o proprietà (logging, memoize, auto-unsubscribe) senza modificare il codice chiamante.',
  'angular.architecture.decorator.benefit1': 'Separazione delle preoccupazioni trasversali',
  'angular.architecture.decorator.benefit2': 'Riutilizzabile e dichiarativo',
  'angular.architecture.decorator.benefit3': 'Riduce boilerplate',
  'angular.architecture.decorator.benefit4': 'Inietta comportamenti comuni',
  'angular.architecture.decorator.useCase1': 'Logging automatico dei metodi',
  'angular.architecture.decorator.useCase2': 'Auto-unsubscribe delle subscription',
  'angular.architecture.decorator.useCase3': 'Validazione degli argomenti',
  'angular.architecture.decorator.implementation1': 'Creare decorator typesafe',
  'angular.architecture.decorator.implementation2': 'Mantenere la logica leggera e testata',
  'angular.architecture.decorator.implementation3': 'Evitare complessità opaca',
  'angular.architecture.decorator.implementation4': 'Documentare effetti collaterali',
  'angular.architecture.decorator.challenge1': 'Flusso di controllo meno esplicito',
  'angular.architecture.decorator.challenge2': 'Debug più complicato',

  'angular.architecture.strategy.title': 'Pattern Strategy',
  'angular.architecture.strategy.description': 'Algoritmi intercambiabili con Change Detection Strategies e Guards',
  'angular.architecture.strategy.detailTitle': 'Strategy Pattern',
  'angular.architecture.strategy.explanation': 'Il pattern Strategy permette di scegliere dinamicamente un\'implementazione di algoritmo a runtime (es: validazione, pagamento).',
  'angular.architecture.strategy.benefit1': 'Flessibilità per cambiare algoritmo',
  'angular.architecture.strategy.benefit2': 'Testabilità delle strategie',
  'angular.architecture.strategy.benefit3': 'Separazione chiara delle responsabilità',
  'angular.architecture.strategy.benefit4': 'Riduzione di if/else complessi',
  'angular.architecture.strategy.useCase1': 'Validazione pluggable',
  'angular.architecture.strategy.useCase2': 'Strategie di pagamento',
  'angular.architecture.strategy.useCase3': 'Strategie di cache',
  'angular.architecture.strategy.implementation1': 'Definire un\'interfaccia Strategy',
  'angular.architecture.strategy.implementation2': 'Iniettare la strategia al runtime',
  'angular.architecture.strategy.implementation3': 'Favorire strategie senza stato',
  'angular.architecture.strategy.implementation4': 'Documentare e testare',
  'angular.architecture.strategy.challenge1': 'Selezione della strategia complessa',
  'angular.architecture.strategy.challenge2': 'Troppi tipi se abbondanti',

  'angular.architecture.adapter.title': 'Pattern Adapter',
  'angular.architecture.adapter.description': 'Trasformazione di API esterne in interfacce interne con services',
  'angular.architecture.adapter.detailTitle': 'Adapter Pattern',
  'angular.architecture.adapter.explanation': 'Un adapter traduce dati o chiamate di un\'API esterna verso il modello interno dell\'applicazione, facilitando l\'interop.',
  'angular.architecture.adapter.benefit1': 'Decouples modello interno da APIs',
  'angular.architecture.adapter.benefit2': 'Centralizza le trasformazioni dati',
  'angular.architecture.adapter.benefit3': 'Facilita migrazione/replace di API',
  'angular.architecture.adapter.benefit4': 'Permette mock più puliti per i test',
  'angular.architecture.adapter.useCase1': 'Adapter per API legacy',
  'angular.architecture.adapter.useCase2': 'Normalizzare formati esterni',
  'angular.architecture.adapter.useCase3': 'Interop tra sistemi',
  'angular.architecture.adapter.implementation1': 'Creare servizi adapter dedicati',
  'angular.architecture.adapter.implementation2': 'Mantener mappings semplici e testabili',
  'angular.architecture.adapter.implementation3': 'Gestire conversioni di date/format',
  'angular.architecture.adapter.implementation4': 'Documentare trasformazioni',
  'angular.architecture.adapter.challenge1': 'Overhead se troppi mapping',
  'angular.architecture.adapter.challenge2': 'Manutenzione quando le API cambiano',

  'angular.architecture.featureSlice.title': 'Architettura Feature-Slice',
  'angular.architecture.featureSlice.description': 'Organizzazione per funzionalità invece che per tipi - ogni feature contiene componenti, servizi, stato',
  'angular.architecture.featureSlice.detailTitle': 'Feature Slice Architecture',
  'angular.architecture.featureSlice.explanation': 'La Feature-Slice organizza il codice per feature, facilitando l\'autonomia dei team e la modularità.',
  'angular.architecture.featureSlice.benefit1': 'Separazione per dominio',
  'angular.architecture.featureSlice.benefit2': 'Facilita lavoro in team autonomi',
  'angular.architecture.featureSlice.benefit3': 'Bundle mirati e più piccoli',
  'angular.architecture.featureSlice.benefit4': 'Test e deploy per feature semplificati',
  'angular.architecture.featureSlice.useCase1': 'Monorepo con features indipendenti',
  'angular.architecture.featureSlice.useCase2': 'Prodotti modulari con team dedicati',
  'angular.architecture.featureSlice.useCase3': 'Refactor progressivo di un monolite',
  'angular.architecture.featureSlice.implementation1': 'Isolare cartelle per feature con barrel exports',
  'angular.architecture.featureSlice.implementation2': 'Gestire dipendenze condivise via shared module',
  'angular.architecture.featureSlice.implementation3': 'Usare facades per esporre l\'API della feature',
  'angular.architecture.featureSlice.implementation4': 'Automatizzare test e CI per feature',
  'angular.architecture.featureSlice.challenge1': 'Duplicazione se condivisione mal gestita',
  'angular.architecture.featureSlice.challenge2': 'Struttura complessa se troppi layer',
  'angular.architecture.cleanArchitecture.title': 'Clean Architecture',
  'angular.architecture.cleanArchitecture.description': 'Separazione in layer: Presentazione, Dominio, Dati - dipendenze puntano verso l\'interno',
  'angular.architecture.cleanArchitecture.detailTitle': 'Clean Architecture',
  'angular.architecture.cleanArchitecture.explanation': 'La Clean Architecture isola la logica business in layer con dipendenze unidirezionali: Presentazione → Applicazione → Dominio ← Infrastruttura.',
  'angular.architecture.cleanArchitecture.benefit1': 'Indipendenza dai framework',
  'angular.architecture.cleanArchitecture.benefit2': 'Testabilità massima del dominio',
  'angular.architecture.cleanArchitecture.benefit3': 'Facilità di sostituzione componenti esterni',
  'angular.architecture.cleanArchitecture.benefit4': 'Separazione chiara delle responsabilità',
  'angular.architecture.cleanArchitecture.useCase1': 'Applicazioni con logica business complessa',
  'angular.architecture.cleanArchitecture.useCase2': 'Progetti con team business e tecnici separati',
  'angular.architecture.cleanArchitecture.useCase3': 'Migrazione progressiva verso nuovi framework',
  'angular.architecture.cleanArchitecture.implementation1': 'Creare layer Domain, Application, Infrastructure, Presentation',
  'angular.architecture.cleanArchitecture.implementation2': 'Usare interfacce per le dipendenze esterne',
  'angular.architecture.cleanArchitecture.implementation3': 'Iniettare dipendenze via DI container',
  'angular.architecture.cleanArchitecture.implementation4': 'Testare il layer Domain indipendentemente',
  'angular.architecture.cleanArchitecture.challenge1': 'Curva di apprendimento ripida',
  'angular.architecture.cleanArchitecture.challenge2': 'Overhead per progetti piccoli',

  'angular.architecture.cqrs.title': 'Pattern CQRS',
  'angular.architecture.cqrs.description': 'Command Query Responsibility Segregation - separazione delle operazioni di lettura e scrittura',
  'angular.architecture.cqrs.detailTitle': 'CQRS Pattern',
  'angular.architecture.cqrs.explanation': 'CQRS separa le operazioni di lettura (queries) dalle operazioni di scrittura (commands) per ottimizzazione e scalabilità indipendenti.',
  'angular.architecture.cqrs.benefit1': 'Ottimizzazione separata lettura/scrittura',
  'angular.architecture.cqrs.benefit2': 'Scalabilità indipendente',
  'angular.architecture.cqrs.benefit3': 'Modelli dati specializzati',
  'angular.architecture.cqrs.benefit4': 'Chiarezza delle intenzioni (command vs query)',
  'angular.architecture.cqrs.useCase1': 'Sistemi con carico lettura/scrittura sbilanciato',
  'angular.architecture.cqrs.useCase2': 'Event sourcing e audit trails',
  'angular.architecture.cqrs.useCase3': 'Applicazioni complesse con viste multiple degli stessi dati',
  'angular.architecture.cqrs.implementation1': 'Definire Commands e Queries separati',
  'angular.architecture.cqrs.implementation2': 'Usare CommandBus e QueryBus',
  'angular.architecture.cqrs.implementation3': 'Ottimizzare i modelli di lettura (read models)',
  'angular.architecture.cqrs.implementation4': 'Sincronizzare via eventi o proiezioni',
  'angular.architecture.cqrs.challenge1': 'Complessità aumentata',
  'angular.architecture.cqrs.challenge2': 'Gestione della coerenza eventuale',

  'angular.architecture.eventDriven.title': 'Architettura Event-Driven',
  'angular.architecture.eventDriven.description': 'Componenti debolmente accoppiati comunicano tramite eventi e observables',
  'angular.architecture.eventDriven.detailTitle': 'Event-Driven Architecture',
  'angular.architecture.eventDriven.explanation': 'L\'architettura Event-Driven usa eventi per disaccoppiare i componenti, ogni evento scatena reazioni in più handler.',
  'angular.architecture.eventDriven.benefit1': 'Forte disaccoppiamento tra componenti',
  'angular.architecture.eventDriven.benefit2': 'Estensibilità facile (aggiunta di handler)',
  'angular.architecture.eventDriven.benefit3': 'Tracciabilità delle azioni via event log',
  'angular.architecture.eventDriven.benefit4': 'Reattività e asincronia',
  'angular.architecture.eventDriven.useCase1': 'Event sourcing e audit',
  'angular.architecture.eventDriven.useCase2': 'Notifiche e analytics',
  'angular.architecture.eventDriven.useCase3': 'Coordinamento tra micro-frontends',
  'angular.architecture.eventDriven.implementation1': 'Creare un EventBus centralizzato',
  'angular.architecture.eventDriven.implementation2': 'Definire DomainEvents tipizzati',
  'angular.architecture.eventDriven.implementation3': 'Registrare handlers via subscription',
  'angular.architecture.eventDriven.implementation4': 'Gestire eventi asincroni correttamente',
  'angular.architecture.eventDriven.challenge1': 'Difficoltà a tracciare il flusso di esecuzione',
  'angular.architecture.eventDriven.challenge2': 'Gestione dell\'ordine degli eventi',

  'angular.architecture.microFrontends.title': 'Micro Frontend',
  'angular.architecture.microFrontends.description': 'Architettura frontend modulare con Module Federation e team indipendenti',
  'angular.architecture.microFrontends.detailTitle': 'Micro Frontends',
  'angular.architecture.microFrontends.explanation': 'I Micro Frontends decompongono un\'applicazione in frammenti indipendenti deployabili e sviluppati da team autonomi.',
  'angular.architecture.microFrontends.benefit1': 'Autonomia dei team',
  'angular.architecture.microFrontends.benefit2': 'Deploy indipendente',
  'angular.architecture.microFrontends.benefit3': 'Tecnologie miste possibili',
  'angular.architecture.microFrontends.benefit4': 'Isolamento degli errori',
  'angular.architecture.microFrontends.useCase1': 'Grandi applicazioni con team multipli',
  'angular.architecture.microFrontends.useCase2': 'Migrazione progressiva a nuovo framework',
  'angular.architecture.microFrontends.useCase3': 'Prodotti compositi con moduli opzionali',
  'angular.architecture.microFrontends.implementation1': 'Usare Module Federation (Webpack 5)',
  'angular.architecture.microFrontends.implementation2': 'Definire shell e remotes',
  'angular.architecture.microFrontends.implementation3': 'Condividere dipendenze comuni',
  'angular.architecture.microFrontends.implementation4': 'Gestire la comunicazione inter-app',
  'angular.architecture.microFrontends.challenge1': 'Complessità operativa',
  'angular.architecture.microFrontends.challenge2': 'Duplicazione delle dipendenze',

  'angular.architecture.ddd.title': 'Domain-Driven Design',
  'angular.architecture.ddd.description': 'Modellazione di logica business complessa con Aggregates, Entities e Value Objects',
  'angular.architecture.ddd.detailTitle': 'Domain-Driven Design (DDD)',
  'angular.architecture.ddd.explanation': 'DDD modella la logica business complessa tramite Entities, Value Objects, Aggregates, e isola il dominio dalle preoccupazioni tecniche.',
  'angular.architecture.ddd.benefit1': 'Allineamento codice e dominio business',
  'angular.architecture.ddd.benefit2': 'Incapsulamento forte della logica',
  'angular.architecture.ddd.benefit3': 'Modelli ricchi ed espressivi',
  'angular.architecture.ddd.benefit4': 'Facilita la collaborazione business-tech',
  'angular.architecture.ddd.useCase1': 'Domini business complessi (finanza, sanità)',
  'angular.architecture.ddd.useCase2': 'Sistemi evolutivi che necessitano robustezza',
  'angular.architecture.ddd.useCase3': 'Applicazioni con regole business ricche',
  'angular.architecture.ddd.implementation1': 'Modellare Entities, Value Objects, Aggregates',
  'angular.architecture.ddd.implementation2': 'Creare interfacce Repository',
  'angular.architecture.ddd.implementation3': 'Usare Domain Services per logica complessa',
  'angular.architecture.ddd.implementation4': 'Separare Domain, Application, Infrastructure',
  'angular.architecture.ddd.challenge1': 'Curva di apprendimento ripida',
  'angular.architecture.ddd.challenge2': 'Overhead per domini semplici',

  'angular.architecture.hexagonal.title': 'Architettura Esagonale',
  'angular.architecture.hexagonal.description': 'Pattern Ports & Adapters - logica business isolata dall\'infrastruttura esterna',
  'angular.architecture.hexagonal.detailTitle': 'Architettura Esagonale (Ports & Adapters)',
  'angular.architecture.hexagonal.explanation': 'L\'Architettura Esagonale separa completamente la logica di dominio dall\'infrastruttura esterna. I Ports definiscono interfacce, gli Adapters le implementano per tecnologie concrete.',
  'angular.architecture.hexagonal.benefit1': 'Testabilità completa della logica di dominio',
  'angular.architecture.hexagonal.benefit2': 'Componenti infrastrutturali intercambiabili',
  'angular.architecture.hexagonal.benefit3': 'Direzione di dipendenza chiara verso l\'interno',
  'angular.architecture.hexagonal.benefit4': 'Indipendenza dai framework',
  'angular.architecture.hexagonal.useCase1': 'Applicazioni critiche per il business',
  'angular.architecture.hexagonal.useCase2': 'Migrazione di sistemi legacy',
  'angular.architecture.hexagonal.useCase3': 'Applicazioni multi-canale',
  'angular.architecture.hexagonal.implementation1': 'Definire interfacce Port nel Domain',
  'angular.architecture.hexagonal.implementation2': 'Use Cases con dipendenze Port',
  'angular.architecture.hexagonal.implementation3': 'Adapters per HTTP, database, ecc.',
  'angular.architecture.hexagonal.implementation4': 'Configurazione DI per binding Port-Adapter',
  'angular.architecture.hexagonal.challenge1': 'Più overhead di astrazione',
  'angular.architecture.hexagonal.challenge2': 'Complessità per app semplici',

  'angular.architecture.stateManagement.title': 'Gestione dello Stato Centralizzata',
  'angular.architecture.stateManagement.description': 'Stato dell\'app centralizzato con Signal Store, NgRx o Akita per flusso dati prevedibile',
  'angular.architecture.stateManagement.detailTitle': 'Gestione dello Stato Centralizzata',
  'angular.architecture.stateManagement.explanation': 'La Gestione dello Stato Centralizzata mantiene l\'intero stato dell\'app in un unico posto. Con Signals, NgRx o Akita, lo stato diventa prevedibile e tracciabile.',
  'angular.architecture.stateManagement.benefit1': 'Single Source of Truth',
  'angular.architecture.stateManagement.benefit2': 'Aggiornamenti di stato prevedibili',
  'angular.architecture.stateManagement.benefit3': 'Debugging e time-travel',
  'angular.architecture.stateManagement.benefit4': 'Condivisione dello stato facile',
  'angular.architecture.stateManagement.useCase1': 'Flussi di dati complessi',
  'angular.architecture.stateManagement.useCase2': 'Sincronizzazione multi-vista',
  'angular.architecture.stateManagement.useCase3': 'App offline-capable',
  'angular.architecture.stateManagement.implementation1': 'Signal Store con selettori computed',
  'angular.architecture.stateManagement.implementation2': 'Aggiornamenti di stato immutabili',
  'angular.architecture.stateManagement.implementation3': 'Metodi di azione per mutazioni',
  'angular.architecture.stateManagement.implementation4': 'Iniezione di service nei componenti',
  'angular.architecture.stateManagement.challenge1': 'Codice boilerplate',
  'angular.architecture.stateManagement.challenge2': 'Curva di apprendimento per store complessi',

  'angular.architecture.onion.title': 'Architettura Onion',
  'angular.architecture.onion.description': 'Architettura a strati con Domain Core al centro, circondato da Application e Infrastructure',
  'angular.architecture.onion.detailTitle': 'Architettura Onion',
  'angular.architecture.onion.explanation': 'L\'Architettura Onion organizza il codice in strati concentrici. Il Domain Core al centro non ha dipendenze, gli strati esterni dipendono da quelli interni.',
  'angular.architecture.onion.benefit1': 'Logica di dominio completamente indipendente',
  'angular.architecture.onion.benefit2': 'Separazione chiara degli strati',
  'angular.architecture.onion.benefit3': 'Alta testabilità',
  'angular.architecture.onion.benefit4': 'Manutenibilità a lungo termine',
  'angular.architecture.onion.useCase1': 'Applicazioni enterprise',
  'angular.architecture.onion.useCase2': 'Progetti a lunga durata',
  'angular.architecture.onion.useCase3': 'Sviluppo cross-team',
  'angular.architecture.onion.implementation1': 'Entità di dominio senza dipendenze',
  'angular.architecture.onion.implementation2': 'Strato di servizi di dominio',
  'angular.architecture.onion.implementation3': 'Servizi di applicazione con use cases',
  'angular.architecture.onion.implementation4': 'Infrastructure & Presentation all\'esterno',
  'angular.architecture.onion.challenge1': 'Molti strati aumentano la complessità',
  'angular.architecture.onion.challenge2': 'Difficile per progetti piccoli',

  'angular.architecture.mvvm.title': 'Pattern MVVM',
  'angular.architecture.mvvm.description': 'Pattern Model-View-ViewModel con Reactive Forms e Data Binding come layer ViewModel',
  'angular.architecture.mvvm.detailTitle': 'Pattern MVVM',
  'angular.architecture.mvvm.explanation': 'MVVM separa View (Template), ViewModel (Component con Reactive Forms) e Model (Domain). Data Binding sincronizza automaticamente View e ViewModel.',
  'angular.architecture.mvvm.benefit1': 'Separazione chiara delle responsabilità',
  'angular.architecture.mvvm.benefit2': 'Logica di vista testabile',
  'angular.architecture.mvvm.benefit3': 'Flussi di dati reattivi',
  'angular.architecture.mvvm.benefit4': 'Vantaggi del two-way binding',
  'angular.architecture.mvvm.useCase1': 'Applicazioni ricche di form',
  'angular.architecture.mvvm.useCase2': 'Viste dashboard',
  'angular.architecture.mvvm.useCase3': 'Schermate di inserimento dati',
  'angular.architecture.mvvm.implementation1': 'Reactive Forms come ViewModel',
  'angular.architecture.mvvm.implementation2': 'Proprietà computed per stato della vista',
  'angular.architecture.mvvm.implementation3': 'Comandi come metodi del componente',
  'angular.architecture.mvvm.implementation4': 'Servizi model per logica business',
  'angular.architecture.mvvm.challenge1': 'ViewModel può diventare complesso',
  'angular.architecture.mvvm.challenge2': 'Overhead per viste semplici',

  'angular.tools.cli.title': 'Angular CLI',
  'angular.tools.cli.description': 'Interfaccia a riga di comando per uno sviluppo rapido',
  'angular.tools.devtools.title': 'Angular DevTools',
  'angular.tools.devtools.description': 'Estensione del browser per debugging e profilazione',
  'angular.tools.devtools.feature1': 'Ispettore dell\'albero dei componenti',
  'angular.tools.devtools.feature2': 'Visualizzatore dell\'iniezione di dipendenze',
  'angular.tools.devtools.feature3': 'Profiler delle prestazioni',
  'angular.tools.devtools.feature4': 'Debugger del rilevamento delle modifiche',
  'angular.tools.build.title': 'Sistema di Build',
  'angular.tools.build.description': 'Sistema di build moderno con Vite e ESBuild',
  'angular.tools.build.feature1': 'Tempi di build estremamente rapidi',
  'angular.tools.build.feature2': 'Hot Module Replacement (HMR)',
  'angular.tools.build.feature3': 'Build di produzione ottimizzati',
  'angular.tools.build.feature4': 'Supporto Source Maps',

  // Common translations
  'angular.common.clickForDetails': 'Clicca per dettagli',
  'angular.common.useCases': 'Casi d\'uso',
  'angular.common.implementation': 'Implementazione',
  'angular.common.setup': 'Installazione & Configurazione',
  'angular.common.configuration': 'Configurazione',
  'angular.common.steps': 'Passaggi',
  'angular.common.example': 'Esempio',
  'angular.common.bestPractices': 'Best Practice',
  'angular.common.benefits': 'Vantaggi',
  'angular.common.challenges': 'Sfide',
  'angular.common.problem': 'Problema',
  'angular.common.solution': 'Soluzione',

  // Sections
  'angular.sections.realWorldPatterns': 'Pattern del mondo reale',
  'angular.sections.realWorldPatternsDesc': 'Soluzioni collaudate per scenari di sviluppo comuni',
  'angular.sections.developmentTools': 'Strumenti di sviluppo',
  'angular.sections.developmentToolsDesc': 'Strumenti moderni e configurazioni per sviluppo Angular professionale',
  'angular.sections.deployment': 'Strategie di deployment',
  'angular.sections.deploymentDesc': 'Best practice per CI/CD, Docker e deployment cloud',
  'angular.sections.accessibility': 'Accessibilità (a11y)',
  'angular.sections.accessibilityDesc': 'Implementazioni conformi WCAG per applicazioni web inclusive',
  'angular.sections.commonPitfalls': 'Errori comuni & Anti-pattern',
  'angular.sections.commonPitfallsDesc': 'Evitare errori tipici e scrivere codice pulito',
  'angular.sections.resources': 'Risorse & Link',
  'angular.sections.resourcesDesc': 'Fonti utili per apprendimento e supporto della community',

  // Real-World Patterns
  'angular.realWorldPatterns.errorBoundary.title': 'Pattern Error Boundary',
  'angular.realWorldPatterns.errorBoundary.description': 'Gestione elegante degli errori con componenti centralizzati',
  'angular.realWorldPatterns.errorBoundary.useCase1': 'Catturare errori nei componenti figli',
  'angular.realWorldPatterns.errorBoundary.useCase2': 'Mostrare messaggi di errore user-friendly',
  'angular.realWorldPatterns.errorBoundary.useCase3': 'Implementare meccanismi di retry',
  'angular.realWorldPatterns.errorBoundary.useCase4': 'Loggare e tracciare errori centralmente',
  'angular.realWorldPatterns.loadingState.title': 'Pattern Stato di caricamento',
  'angular.realWorldPatterns.loadingState.description': 'Gestione unificata degli stati di caricamento, errore e vuoti',
  'angular.realWorldPatterns.loadingState.useCase1': 'Indicatore di caricamento globale',
  'angular.realWorldPatterns.loadingState.useCase2': 'Skeleton screen per migliore UX',
  'angular.realWorldPatterns.loadingState.useCase3': 'Coordinare richieste concorrenti',
  'angular.realWorldPatterns.loadingState.useCase4': 'Mostrare elegantemente stati vuoti',
  'angular.realWorldPatterns.retryLogic.title': 'Pattern Logica di retry',
  'angular.realWorldPatterns.retryLogic.description': 'Strategie di retry intelligenti con backoff esponenziale',
  'angular.realWorldPatterns.retryLogic.useCase1': 'Ritentare automaticamente errori di rete',
  'angular.realWorldPatterns.retryLogic.useCase2': 'Aggirare il rate limiting',
  'angular.realWorldPatterns.retryLogic.useCase3': 'Gestire errori server temporanei',
  'angular.realWorldPatterns.retryLogic.useCase4': 'Strategie di backoff progressivo',
  'angular.realWorldPatterns.optimisticUpdates.title': 'Aggiornamenti ottimistici',
  'angular.realWorldPatterns.optimisticUpdates.description': 'Aggiornamenti UI immediati con rollback in caso di errore',
  'angular.realWorldPatterns.optimisticUpdates.useCase1': 'Funzionalità Like/Unlike',
  'angular.realWorldPatterns.optimisticUpdates.useCase2': 'Aggiornamenti liste todo',
  'angular.realWorldPatterns.optimisticUpdates.useCase3': 'Invii di form',
  'angular.realWorldPatterns.optimisticUpdates.useCase4': 'Aggiornamenti carrello',
  'angular.realWorldPatterns.polling.title': 'Pattern Polling',
  'angular.realWorldPatterns.polling.description': 'Query periodiche al server per aggiornamenti quasi in tempo reale',
  'angular.realWorldPatterns.polling.useCase1': 'Monitorare stato dei job',
  'angular.realWorldPatterns.polling.useCase2': 'Aggiornare dati dashboard',
  'angular.realWorldPatterns.polling.useCase3': 'Recuperare notifiche',
  'angular.realWorldPatterns.polling.useCase4': 'Punteggi e prezzi live',
  'angular.realWorldPatterns.websocket.title': 'Integrazione WebSocket',
  'angular.realWorldPatterns.websocket.description': 'Comunicazione bidirezionale in tempo reale con riconnessione automatica',
  'angular.realWorldPatterns.websocket.useCase1': 'Applicazioni di chat',
  'angular.realWorldPatterns.websocket.useCase2': 'Collaborazione live',
  'angular.realWorldPatterns.websocket.useCase3': 'Notifiche in tempo reale',
  'angular.realWorldPatterns.websocket.useCase4': 'Gaming ed eventi live',

  // Development Tools
  'angular.developmentTools.schematics.title': 'Angular Schematics',
  'angular.developmentTools.schematics.description': 'Generatori di codice personalizzati per strutture di progetto ripetibili',
  'angular.developmentTools.eslint.title': 'Configurazione ESLint',
  'angular.developmentTools.eslint.description': 'Garantire qualità del codice con setup ESLint 9+ moderno',
  'angular.developmentTools.prettier.title': 'Formattatore di codice Prettier',
  'angular.developmentTools.prettier.description': 'Formattazione codice coerente in tutto il team',
  'angular.developmentTools.husky.title': 'Hook Git Husky',
  'angular.developmentTools.husky.description': 'Controlli qualità automatizzati prima di commit e push',
  'angular.developmentTools.conventionalCommits.title': 'Commit convenzionali',
  'angular.developmentTools.conventionalCommits.description': 'Messaggi di commit standardizzati per migliore cronologia',

  // Deployment Strategies
  'angular.deploymentStrategies.docker.title': 'Configurazione Docker Container',
  'angular.deploymentStrategies.docker.description': 'Build Docker multi-stage per immagini di produzione ottimizzate',
  'angular.deploymentStrategies.docker.step1': 'Creare Dockerfile multi-stage',
  'angular.deploymentStrategies.docker.step2': 'Configurare Nginx come server di produzione',
  'angular.deploymentStrategies.docker.step3': 'Docker Compose per sviluppo locale',
  'angular.deploymentStrategies.docker.step4': 'Implementare health check',
  'angular.deploymentStrategies.docker.step5': 'Ottimizzare dimensione immagine',
  'angular.deploymentStrategies.cicd.title': 'Pipeline CI/CD',
  'angular.deploymentStrategies.cicd.description': 'Build e deployment automatizzati con GitHub Actions e GitLab CI',
  'angular.deploymentStrategies.cicd.step1': 'Creare file workflow',
  'angular.deploymentStrategies.cicd.step2': 'Configurare job lint, test e build',
  'angular.deploymentStrategies.cicd.step3': 'Impostare pipeline di deployment',
  'angular.deploymentStrategies.cicd.step4': 'Deployment specifici per ambiente',
  'angular.deploymentStrategies.cicd.step5': 'Implementare strategie di rollback',
  'angular.deploymentStrategies.envVariables.title': 'Variabili d\'ambiente',
  'angular.deploymentStrategies.envVariables.description': 'Gestione sicura della configurazione tra ambienti',
  'angular.deploymentStrategies.envVariables.step1': 'Strutturare file di ambiente',
  'angular.deploymentStrategies.envVariables.step2': 'Caricare configurazione runtime',
  'angular.deploymentStrategies.envVariables.step3': 'Variabili d\'ambiente Docker',
  'angular.deploymentStrategies.envVariables.step4': 'Gestione secrets',
  'angular.deploymentStrategies.featureFlags.title': 'Feature Flag',
  'angular.deploymentStrategies.featureFlags.description': 'Controllo dinamico delle funzionalità senza ridistribuzione',
  'angular.deploymentStrategies.featureFlags.step1': 'Implementare servizio feature flag',
  'angular.deploymentStrategies.featureFlags.step2': 'Creare direttiva feature flag',
  'angular.deploymentStrategies.featureFlags.step3': 'Integrazione configurazione remota',
  'angular.deploymentStrategies.featureFlags.step4': 'Setup A/B testing',
  'angular.deploymentStrategies.monitoring.title': 'Monitoring & Analytics',
  'angular.deploymentStrategies.monitoring.description': 'Tracciamento errori, monitoring prestazioni e analytics utenti',
  'angular.deploymentStrategies.monitoring.step1': 'Integrare tracciamento errori Sentry',
  'angular.deploymentStrategies.monitoring.step2': 'Configurazione Google Analytics 4',
  'angular.deploymentStrategies.monitoring.step3': 'Catturare metriche prestazioni',
  'angular.deploymentStrategies.monitoring.step4': 'Servizio logging personalizzato',
  'angular.deploymentStrategies.monitoring.step5': 'Real User Monitoring (RUM)',

  // Accessibility Patterns
  'angular.accessibility.ariaLabels.title': 'Label e attributi ARIA',
  'angular.accessibility.ariaLabels.description': 'Etichettatura semantica per tecnologie assistive',
  'angular.accessibility.ariaLabels.tip1': 'Usare sempre aria-label per pulsanti icona',
  'angular.accessibility.ariaLabels.tip2': 'aria-describedby per contesto aggiuntivo',
  'angular.accessibility.ariaLabels.tip3': 'aria-live per aggiornamenti contenuto dinamico',
  'angular.accessibility.ariaLabels.tip4': 'aria-expanded per accordion e dropdown',
  'angular.accessibility.keyboardNav.title': 'Navigazione da tastiera',
  'angular.accessibility.keyboardNav.description': 'Operabilità completa senza mouse',
  'angular.accessibility.keyboardNav.tip1': 'Navigazione Tab per tutti elementi interattivi',
  'angular.accessibility.keyboardNav.tip2': 'Tasti freccia per liste e menu',
  'angular.accessibility.keyboardNav.tip3': 'Invio/Spazio per pulsanti e link',
  'angular.accessibility.keyboardNav.tip4': 'Esc per chiudere modali',
  'angular.accessibility.keyboardNav.tip5': 'Indicatori focus visibili',
  'angular.accessibility.focusManagement.title': 'Gestione focus',
  'angular.accessibility.focusManagement.description': 'Controllo intelligente del focus per migliore UX',
  'angular.accessibility.focusManagement.tip1': 'Implementare focus trap nelle modali',
  'angular.accessibility.focusManagement.tip2': 'Auto-focus sul primo input nei form',
  'angular.accessibility.focusManagement.tip3': 'Ripristinare focus dopo chiusura modale',
  'angular.accessibility.focusManagement.tip4': 'Skip link per navigazione rapida',
  'angular.accessibility.screenReader.title': 'Supporto screen reader',
  'angular.accessibility.screenReader.description': 'Supporto ottimale per screen reader',
  'angular.accessibility.screenReader.tip1': 'Regioni live per aggiornamenti stato',
  'angular.accessibility.screenReader.tip2': 'Classe screen-reader-only per nascondere visivamente',
  'angular.accessibility.screenReader.tip3': 'Usare HTML semantico',
  'angular.accessibility.screenReader.tip4': 'Testo alt per tutte le immagini',
  'angular.accessibility.screenReader.tip5': 'Gerarchia corretta dei titoli',

  // Common Pitfalls
  'angular.pitfalls.memoryLeaks.title': 'Evitare memory leak',
  'angular.pitfalls.memoryLeaks.description': 'Pulire correttamente subscription e event listener',
  'angular.pitfalls.changeDetection.title': 'Problemi change detection',
  'angular.pitfalls.changeDetection.description': 'Usare correttamente aggiornamenti immutabili e OnPush',
  'angular.pitfalls.zoneJs.title': 'Problemi prestazioni Zone.js',
  'angular.pitfalls.zoneJs.description': 'Evitare cicli change detection non necessari',
  'angular.pitfalls.antiPatterns.title': 'Anti-pattern',
  'angular.pitfalls.antiPatterns.description': 'Errori comuni nell\'architettura Angular',

  // Resources
  'angular.resources.official.title': 'Documentazione ufficiale',
  'angular.resources.official.description': 'Angular.dev, repository GitHub e risorse ufficiali',
  'angular.resources.community.title': 'Community & Supporto',
  'angular.resources.community.description': 'Discord, Reddit, Stack Overflow e meetup',
  'angular.resources.learning.title': 'Corsi online',
  'angular.resources.learning.description': 'Piattaforme di apprendimento di alta qualità per Angular',
  'angular.resources.youtube.title': 'Canali YouTube',
  'angular.resources.youtube.description': 'Tutorial, aggiornamenti e best practice',
  'angular.resources.blogs.title': 'Blog & Articoli',
  'angular.resources.blogs.description': 'Approfondimenti tecnici e notizie',
  'angular.resources.tools.title': 'Strumenti sviluppatore',
  'angular.resources.tools.description': 'DevTools, playground e strumenti documentazione',
  'angular.resources.libraries.title': 'Librerie UI',
  'angular.resources.libraries.description': 'Librerie di componenti e gestione stato',
  'angular.resources.newsletters.title': 'Newsletter',
  'angular.resources.newsletters.description': 'Aggiornamenti settimanali e notizie',

  // Crypto Detail Modal
  'crypto.detail.loading': 'Caricamento dettagli...',
  'crypto.detail.loadingSubtitle': 'Recupero informazioni dettagliate',
  'crypto.detail.error.title': 'Errore di caricamento',
  'crypto.detail.error.retry': 'Riprova',
  'crypto.detail.close': 'Chiudi',
  'crypto.detail.rank': 'Posizione di mercato',
  'crypto.detail.currentPrice': 'Prezzo attuale',
  'crypto.detail.marketStats': 'Statistiche di mercato',
  'crypto.detail.title': 'Dettagli di',
  'crypto.detail.price': 'Prezzo attuale',
  'crypto.detail.marketCap': 'Capitalizzazione di mercato',
  'crypto.detail.volume': 'Volume 24h',
  'crypto.detail.circulatingSupply': 'Offerta circolante',
  'crypto.detail.totalSupply': 'Offerta totale',
  'crypto.detail.maxSupply': 'Offerta massima',
  'crypto.detail.allTimeHigh': 'Massimo storico',
  'crypto.detail.allTimeLow': 'Minimo storico',
  'crypto.detail.about': 'Informazioni',
  'crypto.detail.links': 'Link',
  'crypto.detail.website': 'Sito web',

  // Common
  'common.close': 'Chiudi',

  // Angular Summary Dialog
  'angularSummary.explanation': 'Spiegazione',
  'angularSummary.codeExample': 'Esempio di codice',
  'angularSummary.benefits': 'Vantaggi',
  'angularSummary.useCases': 'Casi d\'uso',
  'angularSummary.example': 'Esempio',
  'angularSummary.detailedPractices': 'Best practice dettagliate',
  'angularSummary.antiPatterns': 'Da evitare',
  'angularSummary.quickTips': 'Suggerimenti rapidi',

  // Best Practices Details
  'angular.bestPractices.components.detailTitle': 'Best practice dei componenti',
  'angular.bestPractices.components.explanation': 'I componenti Angular moderni utilizzano l\'architettura Standalone, Signals per lo stato reattivo e OnPush Change Detection per prestazioni ottimali.',
  'angular.bestPractices.components.benefit1': 'Migliore riutilizzabilità',
  'angular.bestPractices.components.benefit2': 'Test più semplici',
  'angular.bestPractices.components.benefit3': 'Prestazioni ottimali',
  'angular.bestPractices.components.antiPattern1': 'Logica nel template invece che nel componente',
  'angular.bestPractices.components.antiPattern2': 'Accesso DOM diretto senza ViewChild',
  'angular.bestPractices.components.antiPattern3': 'Componenti grandi senza separazione',

  'angular.bestPractices.state.detailTitle': 'Best practice di gestione dello stato',
  'angular.bestPractices.state.explanation': 'Usa Signals per la gestione dello stato reattivo con tracciamento automatico delle dipendenze e cicli di rilevamento delle modifiche minimi.',
  'angular.bestPractices.state.benefit1': 'Aggiornamenti automatici',
  'angular.bestPractices.state.benefit2': 'Stato type-safe',
  'angular.bestPractices.state.benefit3': 'Pattern immutabili',
  'angular.bestPractices.state.antiPattern1': 'Mutazione diretta di array/oggetti',
  'angular.bestPractices.state.antiPattern2': 'Duplicazione dello stato tra componenti',
  'angular.bestPractices.state.antiPattern3': 'Nessuna chiara fonte unica di verità',

  'angular.bestPractices.templates.detailTitle': 'Best practice dei template',
  'angular.bestPractices.templates.explanation': 'Usa la nuova sintassi Control Flow (@if, @for, @switch) e @defer per migliori prestazioni ed esperienza sviluppatore.',
  'angular.bestPractices.templates.benefit1': 'Migliore leggibilità',
  'angular.bestPractices.templates.benefit2': 'Sicurezza dei tipi',
  'angular.bestPractices.templates.benefit3': 'Prestazioni ottimizzate',
  'angular.bestPractices.templates.antiPattern1': 'Logica complessa nei template',
  'angular.bestPractices.templates.antiPattern2': '@for senza track by',
  'angular.bestPractices.templates.antiPattern3': 'Uso eccessivo di pipe',

  'angular.bestPractices.services.detailTitle': 'Best practice dei servizi',
  'angular.bestPractices.services.explanation': 'I servizi dovrebbero essere stateless, avere responsabilità chiare e utilizzare Signals per i dati reattivi.',
  'angular.bestPractices.services.benefit1': 'Riutilizzabilità',
  'angular.bestPractices.services.benefit2': 'Test semplici',
  'angular.bestPractices.services.benefit3': 'Chiara separazione delle preoccupazioni',
  'angular.bestPractices.services.antiPattern1': 'Servizi con logica UI',
  'angular.bestPractices.services.antiPattern2': 'Gestione errori mancante',
  'angular.bestPractices.services.antiPattern3': 'Nessuna pulizia Observable',

  'angular.bestPractices.performance.detailTitle': 'Best practice di prestazioni',
  'angular.bestPractices.performance.explanation': 'Ottimizza le prestazioni tramite OnPush Change Detection, trackBy nelle liste, Lazy Loading e @defer per contenuti sotto la piega.',
  'angular.bestPractices.performance.benefit1': 'Tempi di caricamento più rapidi',
  'angular.bestPractices.performance.benefit2': 'Meno ri-rendering',
  'angular.bestPractices.performance.benefit3': 'Migliore UX',
  'angular.bestPractices.performance.antiPattern1': 'Nessuna strategia di rilevamento modifiche',
  'angular.bestPractices.performance.antiPattern2': 'Bundle grandi senza code splitting',
  'angular.bestPractices.performance.antiPattern3': 'Immagini e asset non ottimizzati',

  'angular.bestPractices.typescript.detailTitle': 'Best practice TypeScript',
  'angular.bestPractices.typescript.explanation': 'Usa una configurazione TypeScript rigorosa con tutti i controlli del compilatore per massima sicurezza dei tipi e meno errori runtime.',
  'angular.bestPractices.typescript.benefit1': 'Errori a tempo di compilazione',
  'angular.bestPractices.typescript.benefit2': 'Migliore supporto IDE',
  'angular.bestPractices.typescript.benefit3': 'Codice auto-documentante',
  'angular.bestPractices.typescript.antiPattern1': 'Usare il tipo any',
  'angular.bestPractices.typescript.antiPattern2': 'Abuso di asserzioni di tipo',
  'angular.bestPractices.typescript.antiPattern3': 'Disabilitare i controlli rigorosi',

  'angular.bestPractices.accessibility.detailTitle': 'Best practice di accessibilità',
  'angular.bestPractices.accessibility.explanation': 'Assicurati che la tua applicazione sia accessibile a tutti gli utenti tramite HTML semantico, attributi ARIA e navigazione da tastiera.',
  'angular.bestPractices.accessibility.benefit1': 'Pubblico più ampio',
  'angular.bestPractices.accessibility.benefit2': 'Migliore SEO',
  'angular.bestPractices.accessibility.benefit3': 'Conformità legale',
  'angular.bestPractices.accessibility.antiPattern1': 'Etichette ARIA mancanti',
  'angular.bestPractices.accessibility.antiPattern2': 'Nessuna navigazione da tastiera',
  'angular.bestPractices.accessibility.antiPattern3': 'Scarsi contrasti di colore',

  'angular.bestPractices.testing.detailTitle': 'Best practice di testing',
  'angular.bestPractices.testing.explanation': 'Scrivi test significativi per componenti e servizi con elevata copertura e asserzioni chiare.',
  'angular.bestPractices.testing.benefit1': 'Meno bug',
  'angular.bestPractices.testing.benefit2': 'Refactoring sicuro',
  'angular.bestPractices.testing.benefit3': 'Documentazione vivente',
  'angular.bestPractices.testing.antiPattern1': 'Testare l\'implementazione invece del comportamento',
  'angular.bestPractices.testing.antiPattern2': 'Nessun isolamento dei test',
  'angular.bestPractices.testing.antiPattern3': 'Troppi mock',

  'angular.bestPractices.errorHandling.detailTitle': 'Best practice di gestione errori',
  'angular.bestPractices.errorHandling.explanation': 'Implementa gestione errori globale, messaggi di errore significativi e boundary di errore per applicazioni robuste.',
  'angular.bestPractices.errorHandling.benefit1': 'Migliore esperienza utente',
  'angular.bestPractices.errorHandling.benefit2': 'Debug più semplice',
  'angular.bestPractices.errorHandling.benefit3': 'Applicazioni più robuste',
  'angular.bestPractices.errorHandling.antiPattern1': 'Soppressione degli errori',
  'angular.bestPractices.errorHandling.antiPattern2': 'Nessun log degli errori',
  'angular.bestPractices.errorHandling.antiPattern3': 'Messaggi di errore generici',

  'angular.bestPractices.security.detailTitle': 'Best practice di sicurezza',
  'angular.bestPractices.security.explanation': 'Proteggi la tua applicazione da XSS, CSRF e altri rischi di sicurezza tramite DomSanitizer, Content Security Policy e pratiche HTTP sicure.',
  'angular.bestPractices.security.benefit1': 'Protezione da attacchi XSS',
  'angular.bestPractices.security.benefit2': 'Trasmissione dati sicura',
  'angular.bestPractices.security.benefit3': 'Conformità OWASP',
  'angular.bestPractices.security.antiPattern1': 'Rendering HTML non sanitizzato',
  'angular.bestPractices.security.antiPattern2': 'Dati sensibili in LocalStorage',
  'angular.bestPractices.security.antiPattern3': 'HTTPS mancante',

  'angular.bestPractices.codeOrganization.detailTitle': 'Best practice di organizzazione del codice',
  'angular.bestPractices.codeOrganization.explanation': 'Organizza il tuo codice per funzionalità con struttura delle cartelle chiara, barrel exports e separazione delle preoccupazioni.',
  'angular.bestPractices.codeOrganization.benefit1': 'Migliore manutenibilità',
  'angular.bestPractices.codeOrganization.benefit2': 'Onboarding più semplice',
  'angular.bestPractices.codeOrganization.benefit3': 'Architettura scalabile',
  'angular.bestPractices.codeOrganization.antiPattern1': 'Struttura cartelle piatta',
  'angular.bestPractices.codeOrganization.antiPattern2': 'Preoccupazioni miste',
  'angular.bestPractices.codeOrganization.antiPattern3': 'Nessuna convenzione di denominazione',

  'angular.bestPractices.dependency.detailTitle': 'Best practice di dependency injection',
  'angular.bestPractices.dependency.explanation': 'Usa inject() per DI moderno, Injection Tokens per la configurazione e providedIn per servizi tree-shakeable.',
  'angular.bestPractices.dependency.benefit1': 'Migliore Tree-Shaking',
  'angular.bestPractices.dependency.benefit2': 'Dipendenze chiare',
  'angular.bestPractices.dependency.benefit3': 'Test semplici',
  'angular.bestPractices.dependency.antiPattern1': 'Aggirare il singleton del servizio',
  'angular.bestPractices.dependency.antiPattern2': 'Dipendenze circolari',
  'angular.bestPractices.dependency.antiPattern3': 'Nessun token di injection',

  'angular.bestPractices.buildDeploy.detailTitle': 'Best practice di build e deploy',
  'angular.bestPractices.buildDeploy.explanation': 'Ottimizza i build di produzione con budget, variabili d\'ambiente e pipeline CI/CD automatizzate.',
  'angular.bestPractices.buildDeploy.benefit1': 'Deploy veloci',
  'angular.bestPractices.buildDeploy.benefit2': 'Dimensioni bundle ridotte',
  'angular.bestPractices.buildDeploy.benefit3': 'Controlli di qualità automatizzati',
  'angular.bestPractices.buildDeploy.antiPattern1': 'Nessun budget di build',
  'angular.bestPractices.buildDeploy.antiPattern2': 'Segreti nel codice',
  'angular.bestPractices.buildDeploy.antiPattern3': 'Deploy manuali',

  // Advanced Topics Details
  'angular.advanced.routing.detailTitle': 'Routing avanzato',
  'angular.advanced.routing.explanation': 'Routing Angular moderno con guard funzionali, resolver e code-splitting per prestazioni ottimali.',
  'angular.advanced.routing.benefit1': 'Code-splitting & Lazy Loading',
  'angular.advanced.routing.benefit2': 'Guard & Resolver type-safe',
  'angular.advanced.routing.benefit3': 'Navigazione ottimizzata',
  'angular.advanced.routing.antiPattern1': 'Nessuna strategia di lazy loading',
  'angular.advanced.routing.antiPattern2': 'Implementazione guard mancante',
  'angular.advanced.routing.antiPattern3': 'Definizioni route non strutturate',

  'angular.advanced.forms.detailTitle': 'Formulari reattivi',
  'angular.advanced.forms.explanation': 'Formulari reattivi tipizzati con type safety TypeScript, validatori personalizzati e validazione asincrona.',
  'angular.advanced.forms.benefit1': 'Type safety completa',
  'angular.advanced.forms.benefit2': 'Validazione reattiva',
  'angular.advanced.forms.benefit3': 'Validatori riutilizzabili',
  'angular.advanced.forms.antiPattern1': 'Form template-driven per logica complessa',
  'angular.advanced.forms.antiPattern2': 'Gestione errori mancante',
  'angular.advanced.forms.antiPattern3': 'Nessun validatore personalizzato',

  'angular.advanced.rxjs.detailTitle': 'Padronanza RxJS',
  'angular.advanced.rxjs.explanation': 'Pattern RxJS avanzati con observable di ordine superiore, gestione errori e prevenzione memory leak.',
  'angular.advanced.rxjs.benefit1': 'Gestione efficiente degli stream',
  'angular.advanced.rxjs.benefit2': 'Gestione errori automatica',
  'angular.advanced.rxjs.benefit3': 'Prevenzione memory leak',
  'angular.advanced.rxjs.antiPattern1': 'Logica unsubscribe mancante',
  'angular.advanced.rxjs.antiPattern2': 'Subscription annidate',
  'angular.advanced.rxjs.antiPattern3': 'Nessuna gestione errori',

  'angular.advanced.changeDetection.detailTitle': 'Ottimizzazione Change Detection',
  'angular.advanced.changeDetection.explanation': 'Change detection OnPush, signals e Angular senza zone per ottimizzazione massima delle prestazioni.',
  'angular.advanced.changeDetection.benefit1': 'Molte meno verifiche',
  'angular.advanced.changeDetection.benefit2': 'Prestazioni migliori',
  'angular.advanced.changeDetection.benefit3': 'Senza zone possibile',
  'angular.advanced.changeDetection.antiPattern1': 'Change detection predefinita ovunque',
  'angular.advanced.changeDetection.antiPattern2': 'Aggiornamenti stato mutabili',
  'angular.advanced.changeDetection.antiPattern3': 'Chiamate markForCheck() mancanti',

  'angular.advanced.animations.detailTitle': 'Animazioni Angular',
  'angular.advanced.animations.explanation': 'Animazioni complesse con gestione stato, transizioni route ed effetti stagger per interfacce moderne.',
  'angular.advanced.animations.benefit1': 'Transizioni UI fluide',
  'angular.advanced.animations.benefit2': 'Sintassi dichiarativa',
  'angular.advanced.animations.benefit3': 'Ottimizzato per le prestazioni',
  'angular.advanced.animations.antiPattern1': 'Animazioni CSS nei componenti',
  'angular.advanced.animations.antiPattern2': 'Callback animazione mancanti',
  'angular.advanced.animations.antiPattern3': 'Animazioni troppo complesse',

  'angular.advanced.testing.detailTitle': 'Test avanzati',
  'angular.advanced.testing.explanation': 'Strategie di test complete con test componenti, servizi, mocking HTTP e test E2E.',
  'angular.advanced.testing.benefit1': 'Alta qualità del codice',
  'angular.advanced.testing.benefit2': 'Refactoring sicuro',
  'angular.advanced.testing.benefit3': 'Test di regressione automatizzati',
  'angular.advanced.testing.antiPattern1': 'Testare implementazione invece del comportamento',
  'angular.advanced.testing.antiPattern2': 'Isolamento test mancante',
  'angular.advanced.testing.antiPattern3': 'Nessun test HTTP',

  'angular.advanced.ssr.detailTitle': 'Server-Side Rendering',
  'angular.advanced.ssr.explanation': 'Angular Universal per SEO, prestazioni e migliore first contentful paint con transfer state.',
  'angular.advanced.ssr.benefit1': 'SEO migliore',
  'angular.advanced.ssr.benefit2': 'Caricamento iniziale più veloce',
  'angular.advanced.ssr.benefit3': 'Prestazioni migliorate',
  'angular.advanced.ssr.antiPattern1': 'API browser nel codice server',
  'angular.advanced.ssr.antiPattern2': 'Controlli piattaforma mancanti',
  'angular.advanced.ssr.antiPattern3': 'Nessun transfer state',

  'angular.advanced.i18n.detailTitle': 'Internazionalizzazione',
  'angular.advanced.i18n.explanation': 'i18n runtime con servizio basato su signals per cambio lingua dinamico e UX ottimale.',
  'angular.advanced.i18n.benefit1': 'Cambio lingua dinamico',
  'angular.advanced.i18n.benefit2': 'Traduzioni lazy-loaded',
  'angular.advanced.i18n.benefit3': 'Chiavi type-safe',
  'angular.advanced.i18n.antiPattern1': 'Stringhe hardcoded',
  'angular.advanced.i18n.antiPattern2': 'Tutte le lingue nel bundle',
  'angular.advanced.i18n.antiPattern3': 'Pluralizzazione mancante',

  'angular.advanced.security.detailTitle': 'Best practice di sicurezza',
  'angular.advanced.security.explanation': 'Sicurezza completa con DomSanitizer, CSP, protezione CSRF e comunicazione HTTP sicura.',
  'angular.advanced.security.benefit1': 'Protezione XSS',
  'angular.advanced.security.benefit2': 'Protezione CSRF',
  'angular.advanced.security.benefit3': 'Content Security Policy',
  'angular.advanced.security.antiPattern1': 'Rendering HTML non sanitizzato',
  'angular.advanced.security.antiPattern2': 'Token in localStorage',
  'angular.advanced.security.antiPattern3': 'Header CSP mancanti',

  'angular.advanced.directives.detailTitle': 'Direttive personalizzate',
  'angular.advanced.directives.explanation': 'Direttive strutturali e di attributo per manipolazione DOM riutilizzabile e funzionalità estese.',
  'angular.advanced.directives.benefit1': 'Logica riutilizzabile',
  'angular.advanced.directives.benefit2': 'Template puliti',
  'angular.advanced.directives.benefit3': 'Potenza di Host Binding',
  'angular.advanced.directives.antiPattern1': 'Manipolazione DOM diretta',
  'angular.advanced.directives.antiPattern2': 'Direttive troppo complesse',
  'angular.advanced.directives.antiPattern3': 'Gestione errori mancante',

  'angular.advanced.pipes.detailTitle': 'Pipe personalizzate',
  'angular.advanced.pipes.explanation': 'Pipe pure e impure per trasformazione dati con ottimizzazioni prestazioni e memoization.',
  'angular.advanced.pipes.benefit1': 'Trasformazioni riutilizzabili',
  'angular.advanced.pipes.benefit2': 'Logica template ridotta',
  'angular.advanced.pipes.benefit3': 'Caching automatico (Pure)',
  'angular.advanced.pipes.antiPattern1': 'Pipe impure senza motivo',
  'angular.advanced.pipes.antiPattern2': 'Logica complessa nelle pipe',
  'angular.advanced.pipes.antiPattern3': 'Type safety mancante',

  'angular.advanced.httpInterceptors.detailTitle': 'Interceptor HTTP',
  'angular.advanced.httpInterceptors.explanation': 'Interceptor funzionali per auth, logging, gestione errori e trasformazione richiesta/risposta.',
  'angular.advanced.httpInterceptors.benefit1': 'Logica HTTP centralizzata',
  'angular.advanced.httpInterceptors.benefit2': 'Header auth automatici',
  'angular.advanced.httpInterceptors.benefit3': 'Gestione errori globale',
  'angular.advanced.httpInterceptors.antiPattern1': 'Ignorare ordine interceptor',
  'angular.advanced.httpInterceptors.antiPattern2': 'Troppi interceptor',
  'angular.advanced.httpInterceptors.antiPattern3': 'Propagazione errori mancante',

  'angular.advanced.stateManagement.detailTitle': 'Gestione stato',
  'angular.advanced.stateManagement.explanation': 'Store basati su signals per gestione stato reattiva con valori calcolati e immutabilità.',
  'angular.advanced.stateManagement.benefit1': 'Gestione stato centralizzata',
  'angular.advanced.stateManagement.benefit2': 'Aggiornamenti reattivi',
  'angular.advanced.stateManagement.benefit3': 'Stato immutabile',
  'angular.advanced.stateManagement.antiPattern1': 'Stato nei componenti',
  'angular.advanced.stateManagement.antiPattern2': 'Aggiornamenti stato mutabili',
  'angular.advanced.stateManagement.antiPattern3': 'Nessuna fonte unica di verità',

  'angular.advanced.moduleFederation.detailTitle': 'Module Federation',
  'angular.advanced.moduleFederation.explanation': 'Architettura micro-frontend con Webpack Module Federation per applicazioni enterprise scalabili.',
  'angular.advanced.moduleFederation.benefit1': 'Deploy indipendenti',
  'angular.advanced.moduleFederation.benefit2': 'Scalabilità team',
  'angular.advanced.moduleFederation.benefit3': 'Dipendenze condivise',
  'angular.advanced.moduleFederation.antiPattern1': 'Accoppiamento stretto tra MFE',
  'angular.advanced.moduleFederation.antiPattern2': 'Nessuna strategia versione',
  'angular.advanced.moduleFederation.antiPattern3': 'MFE troppo piccoli',

  'angular.advanced.pwa.detailTitle': 'Progressive Web App',
  'angular.advanced.pwa.explanation': 'PWA offline-first con service worker, strategie di caching e notifiche push.',
  'angular.advanced.pwa.benefit1': 'Funzionalità offline',
  'angular.advanced.pwa.benefit2': 'Installabile',
  'angular.advanced.pwa.benefit3': 'Notifiche push',
  'angular.advanced.pwa.antiPattern1': 'Caching troppo aggressivo',
  'angular.advanced.pwa.antiPattern2': 'Strategia aggiornamento mancante',
  'angular.advanced.pwa.antiPattern3': 'Nessun fallback offline',

  // Footer
  'crypto.backToHome.button': 'Torna alla home',
  'crypto.backToHome.tooltip': 'Torna alla pagina principale',

  // Footer
  'footer.copyright': '2025 Mike Diethelm. Realizzato con Angular 20.',
  'footer.github.title': 'Profilo GitHub',
  'footer.linkedin.title': 'Profilo LinkedIn',
  'footer.techstack': 'Angular • Material Design 3 • TypeScript'
};
